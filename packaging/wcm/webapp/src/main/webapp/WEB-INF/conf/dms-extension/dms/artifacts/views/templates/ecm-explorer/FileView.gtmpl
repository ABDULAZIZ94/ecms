<%
  /**
   * Created by The eXo Platform SARL
   * Author : Dang Van Minh
   *          minhdv@exoplatform.com
   * July 25, 2006
   * 8:16:23 AM
   */
%>
<%
  import java.util.ArrayList;
	import java.net.URLEncoder;
  import org.exoplatform.ecm.webui.utils.Utils ;
  import org.exoplatform.web.application.Parameter ;
  import org.exoplatform.webui.core.UIRightClickPopupMenu ;
  import org.exoplatform.ecm.webui.component.explorer.UIWorkingArea;
  import org.exoplatform.ecm.webui.component.explorer.UIDocumentNodeList;
  import org.exoplatform.ecm.utils.text.Text;
  import org.exoplatform.services.cms.link.LinkManager;
  import org.exoplatform.ecm.webui.component.explorer.DocumentProviderUtils;
  import org.exoplatform.ecm.jcr.model.Preference;
  import org.exoplatform.ecm.webui.component.explorer.UIJCRExplorer;
  import org.exoplatform.ecm.webui.component.explorer.sidebar.UITreeExplorer;
  import javax.jcr.Value;
  import javax.jcr.PathNotFoundException;
  import org.exoplatform.services.wcm.utils.WCMCoreUtils;
  import org.exoplatform.services.jcr.RepositoryService;
  import org.exoplatform.services.wcm.core.NodetypeConstant;
  import java.net.URLEncoder;
  import org.exoplatform.services.wcm.core.NodeLocation;
  import org.apache.commons.lang.StringUtils;
  org.exoplatform.services.cms.link.NodeFinder;
  
  def linkManager = WCMCoreUtils.getService(LinkManager.class);
  def uiWorkingArea = uicomponent.getAncestorOfType(UIWorkingArea.class);
  def uiExplorer = uicomponent.getAncestorOfType(UIJCRExplorer.class);
  uiExplorer.setCanShowSideBar(false);
  def pref = uiExplorer.getPreference();
  def enableDragAndDrop = pref.isEnableDragAndDrop();
  def uiCustomActionComponent = uiWorkingArea.getCustomAction();
  def managersMultiItemContext =  uiWorkingArea.getMultiActionsExtensionList();
  def managersGroundContext = uiWorkingArea.getGroundActionsExtensionList();
  def action = "";
  def permLinkComponent = null;
  UIRightClickPopupMenu contextMenu = uicomponent.getContextMenu() ;
  String componentId = uicomponent.getId();
  java.text.DateFormat dateFormat = uicomponent.getSimpleDateFormat();
  def viewComponentId  = new Date().getTime();
  def rcontext = _ctx.getRequestContext() ;
  def size = uicomponent.getChildrenList().size();
  def jsManager = rcontext.getJavascriptManager();
  jsManager.require("SHARED/ecm-utils", "ecmutil").
            require("SHARED/explorer-module", "explorer").
//  addScripts("explorer.UIListView.initAllEvent('${componentId}-$viewComponentId', '$enableDragAndDrop');").
  addScripts("ecmutil.ECMUtils.initClipboard('clip_button','1','$size');").
	addScripts('explorer.UIListView.loadEffectedWidthColumn();').
  addScripts('explorer.UIFileView.clearOpenDivs();').
  addScripts('explorer.UIFileView.clearSideBar();');
	
	//Config to display columns with format: ["${column};${width}"]
	//Default 
	String[] arrColumns = ["exo:owner;95px","exo:dateModified;123px","exo:dateCreated;121px"];
	def absNodePath = uiExplorer.getCurrentPath();
	def relNodePath = uiExplorer.filterPath(absNodePath);
	def drivePath = new StringBuffer(absNodePath.substring(0, absNodePath.indexOf(relNodePath)));
	if (StringUtils.isEmpty(drivePath.toString())) {
	  drivePath.append("/");
	}
%>
<div id="$componentId">
	<div id="${componentId}-$viewComponentId" class="UIListView">	
		<div class="UIListGrid">
				<div class="TitleTable">
					<div class="ClearFix">
					  <div class="Breadcrumb FL"><span></span></div>
		        <a style="cursor: pointer; -moz-outline: none; -moz-user-select: none;color: black;float: left"
	             onclick="<%=uicomponent.event("ChangeNode", drivePath.toString(), new Parameter("workspaceName", uiExplorer.getDriveData().getWorkspace()))%>" class="NodeLabel">
	            <strong><%=uiExplorer.findFirstComponentOfType(UITreeExplorer.class).getLabel()%></strong>
            </a>
            <%
            for (String nodeName : relNodePath.split("/")) {
              if (!StringUtils.isEmpty(nodeName)) {
                drivePath.append("/").append(nodeName);
                def nodeWs = uiExplorer.getDriveData().getWorkspace();
                %>
                  <span class="FL"><strong>&nbsp;>&nbsp;</strong></span>
                  <a style="cursor: pointer; -moz-outline: none; -moz-user-select: none;color: black;float: left"
                    onclick="<%=uicomponent.event("ChangeNode", drivePath.toString(), new Parameter("workspaceName", nodeWs))%>" class="NodeLabel">
                   <strong><%=nodeName%></strong>
                  </a>
                <%
              }
            }
            %>
			    </div>
			    <div style="position: relative; top: 0px; left: 0px; width: 0px; height: 0px">
						<div class="Mask" style="position: absolute; top: 0px; left: 0px; width: 0px; height: 0px"></div>
						
						<div class="JCRMoveAction" 
								 style="display: none;" 
								 request="<%=uiWorkingArea.getJCRMoveAction().event(UIWorkingArea.MOVE_NODE)%>" 
								 symlink="<%=uiWorkingArea.getCreateLinkAction().event(UIWorkingArea.CREATE_LINK)%>">
						</div>
						
						<div class="ItemContextMenu" style="position: absolute; top: 0px; left: 0px; display: none;">
							<div class="UIRightClickPopupMenu" style="display: block;">
								<div class="UIRightPopupMenuContainer" onmousedown="event.cancelBubble = true;" onkeydown="event.cancelBubble = true;">									
											<%
												for(itemContext in managersMultiItemContext) {
													action = itemContext.getUIExtensionName();
											%>
													<a class="MenuItem" style="display: block;" onclick=eXo.ecm.UIListView.postGroupAction("<%=itemContext.event(action)%>")> 	
													<div class="ItemIcon ${action}16x16Icon">
													<%=_ctx.appRes("ECMContextMenu.event." + action)%>
													</div>
								 			</a>
											<%
												}
											%>
										
								 </div>	
							 </div> 
						</div>
						<div class="GroundContextMenu" style="position: absolute;
											 top: 0px; left: 0px; display: none;">
								<div class="UIRightClickPopupMenu" style="display: block;">
									<div class="UIRightPopupMenuContainer" onmousedown="event.cancelBubble = true;" onkeydown="event.cancelBubble = true;">					
										<%
													for(itemGroundContext in managersGroundContext) {
													action = itemGroundContext.getUIExtensionName();
										%>
									<a class="MenuItem" href="<%=itemGroundContext.event(action)%>" style="display: block;"> 	
											<div class="ItemIcon ${action}16x16Icon">
												<%=_ctx.appRes("ECMContextMenu.event." + action)%>
											</div>
									 	</a>
									<%}%>			
									 </div>	
								 </div>
						</div>
					</div>
				</div>
      <%      	
        def uiDocumentNodeList = uicomponent.getChild(UIDocumentNodeList.class);
        if (uiDocumentNodeList != null) {
          uicomponent.renderChild(uiDocumentNodeList);
        }
        %>
	      </div>
	 <% 
	 //re-initialize action
	 	uiWorkingArea.initialize(); %>
		</div>

</div>	

