Taxonomy service is used for working with taxonomies. In this service there are many functions which allow you to add, find, delete taxonomies from node.

h1. API

|| Method Summary || ||
| Node\t | getTaxonomyTree(String repository, String taxonomyName, boolean system) throws RepositoryException;{example}{example} \t\t\t Returns the root node of the given taxonomy tree{example}{example} \t\t\t {example}{example} \t\t\t @param repository The name of repository{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @param system Indicates whether the nodes must be retrieved using a session system or user session{example}{example} \t\t\t @throws RepositoryException if the taxonomy tree could not be found |
| Node {example}{example} | getTaxonomyTree(String repository, String taxonomyName) throws RepositoryException;{example}{example} \t\t Returns the root node of the given taxonomy tree with the user session{example}{example} {example}{example}\t\t\t @param repository The name of repository{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @throws RepositoryException if the taxonomy tree could not be found{example}{example} |
| List<Node> | getAllTaxonomyTrees(String repository, boolean system) throws RepositoryException;{example}{example} \t\t Returns the list of all the root nodes of the taxonomy tree available\t\t {example}{example} {example}{example}\t\t\t @param repository The name of repository{example}{example} \t\t\t @param system Indicates whether the nodes must be retrieved using a session system or user session{example}{example} \t\t\t @throws RepositoryException if the taxonomy trees could not be found{example}{example} |
| List<Node> | getAllTaxonomyTrees(String repository) throws RepositoryException;{example}{example} \tReturns the list of all the root nodes of the taxonomy tree available with the user session{example}{example} \t\t\t {example}{example} \t\t\t @param repository The name of repository{example}{example} \t\t\t @throws RepositoryException if the taxonomies could not be found{example}{example} |
| boolean {example}{example} | hasTaxonomyTree(String repository, String taxonomyName) throws RepositoryException;{example}{example} \t Checks if a taxonomy tree with the given name has already been defined{example}{example} \t\t\t {example}{example} \t\t\t @param repository The name of repository{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @throws RepositoryException if the taxonomy name could not be checked{example}{example} |
| void | addTaxonomyTree(Node taxonomyTree) throws RepositoryException, TaxonomyAlreadyExistsException;{example}{example} \tDefines a node as a new taxonomy tree{example}{example} \t\t\t {example}{example} \t\t\t @param taxonomyTree The taxonomy tree to define{example}{example} \t\t\t @throws TaxonomyAlreadyExistsException if a taxonomy with the same name has already been defined{example}{example} \t\t\t @throws RepositoryException if the taxonomy tree could not be defined{example}{example} |
| void {example}{example} | updateTaxonomyTree(String taxonomyName, Node taxonomyTree) throws RepositoryException;{example}{example} \t Re-defines a node as a taxonomy tree{example}{example} \t\t\t {example}{example} \t\t\t @param taxonomyName The name of the taxonomy to update{example}{example} \t\t\t @param taxonomyTree The taxonomy tree to define{example}{example} \t\t\t @throws RepositoryException if the taxonomy tree could not be updated\t\t\t {example}{example} |
| void {example}{example} | removeTaxonomyTree(String taxonomyName) throws RepositoryException;{example}{example} \t Remove the taxonomy tree definition{example}{example} \t\t\t {example}{example} \t\t\t @param taxonomyName The name of the taxonomy to remove{example}{example} \t\t\t @throws RepositoryException if the taxonomy tree could not be removed{example}{example} |
| void {example}{example} | addTaxonomyNode(String repository, String  workspace, String parentPath, String taxoNodeName, String creator) throws RepositoryException,  TaxonomyNodeAlreadyExistsException;\t Adds a new taxonomy node at the given location{example}{example} \t\t\t {example}{example} \t\t\t @param repository The name of the repository{example}{example} \t\t\t @param workspace The name of the workspace{example}{example} \t\t\t @param parentPath The place where the taxonomy node will be added{example}{example} \t\t\t @param taxoNodeName The name of taxonomy node{example}{example} \t\t\t @param creator The name of the user creating this node {example}{example} \t\t\t @throws TaxonomyNodeAlreadyExistsException if a taxonomy node with the same name has already been added{example}{example} \t\t\t @throws RepositoryException if the taxonomy node could not be added{example}{example} |
| void | removeTaxonomyNode(String repository, String workspace, String  absPath) throws RepositoryException;{example}{example} \t Removes the taxonomy node located at the given absolute path{example}{example} \t\t\t {example}{example} \t\t\t @param repository The name of the repository{example}{example} \t\t\t @param workspace The name of the workspace{example}{example} \t\t\t @param absPath The absolute path of the taxonomy node to remove{example}{example} \t\t\t @throws RepositoryException if the taxonomy node could not be removed{example}{example} |
| void | moveTaxonomyNode(String repository, String workspace, String srcPath,  String destPath, String type) throws RepositoryException;{example}{example} \tCopies or cuts the taxonomy node from source path to destination path. The parameter type indicates if the node must be cut or copied{example}{example} \t\t\t {example}{example} \t\t\t @param repository The name of the repository{example}{example} \t\t\t @param workspace The name of the workspace{example}{example} \t\t\t @param srcPath The source path of this taxonomy{example}{example} \t\t\t @param destPath The destination path of the taxonomy{example}{example} \t\t\t @param type If type is equal to "cut", the process will be cut If type is equal to "copy", the process will be copied{example}{example} \t\t\t @throws RepositoryException if the taxonomy node could not be moved{example}{example} |
| boolean | hasCategories(Node node, String taxonomyName) throws  RepositoryException;{example}{example} \t Returns true if the given node has categories in the given taxonomy{example}{example} \t\t\t {example}{example} \t\t\t @param node The node to check{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @throws RepositoryException if categories cannot be checked{example}{example} |
| boolean | hasCategories(Node node, String taxonomyName, boolean system) throws  RepositoryException;{example}{example} \t Returns true if the given node has categories in the given taxonomy{example}{example} \t\t\t {example}{example} \t\t\t @param node The node to check{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @param system check system provider or not{example}{example} \t\t\t @throws RepositoryException if categories cannot be checked{example}{example} |
| List<Node> | getCategories(Node node, String taxonomyName) throws  RepositoryException;{example}{example} \t Returns all the paths of the categories (relative to the root node of the{example}{example} \t\t\t given taxonomy) which have been associated to the given node for the given{example}{example} \t\t\t taxonomy{example}{example} \t\t\t {example}{example} \t\t\t @param node The node for which we seek the categories{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @throws RepositoryException if the categories cannot be retrieved{example}{example} |
| List<Node> | getCategories(Node node, String taxonomyName, boolean system) throws  RepositoryException;{example}{example} \t Returns all the paths of the categories(relative to the root node of the given taxonomy) which have been associated to the given node for the given taxonomy{example}{example} \t\t\t {example}{example} \t\t\t @param node The node for which we seek the categories{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @param system {example}{example} \t\t\t @throws RepositoryException if the categories cannot be retrieved{example}{example} |
| List<Node> | getAllCategories(Node node) throws RepositoryException;{example}{example} \t Returns all the paths of the categories which have been associated to the given node{example}{example} \t\t\t @param node\t The node for which we seek the categories{example}{example} \t\t\t @throws RepositoryException{example}{example} |
| List<Node> | getAllCategories(Node node, boolean system) throws RepositoryException;{example}{example} \t Returns all the paths of the categories which have been associated to the given node{example}{example} \t\t\t @param node\t The node for which we seek the categories{example}{example} \t\t\t @param system check system provider or not{example}{example} \t\t\t @throws RepositoryException{example}{example} |
| void | removeCategory(Node node, String taxonomyName, String categoryPath)  throws RepositoryException;{example}{example} \t Removes a category to the given node{example}{example} \t\t\t {example}{example} \t\t\t @param node The node for which we remove the category{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @param categoryPath The path of the category relative to the root node of the given taxonomy{example}{example} \t\t\t @throws RepositoryException if the category cannot be removed{example}{example} |
| void {example}{example} | removeCategory(Node node, String taxonomyName, String categoryPath,  boolean system) throws RepositoryException;{example}{example} \t Removes a category to the given node{example}{example} \t\t\t {example}{example} \t\t\t @param node The node for which we remove the category{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @param categoryPath The path of the category relative to the root node of the given taxonomy{example}{example} \t\t\t @param system check system provider or not{example}{example} \t\t\t @throws RepositoryException if the category cannot be removed{example}{example} |
| void | addCategories(Node node, String taxonomyName, String\[\] categoryPaths)  throws RepositoryException;{example}{example} \t Adds several categories to the given node{example}{example} \t\t\t {example}{example} \t\t\t @param node The node for which we add the categories{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @param categoryPaths An array of category paths relative to the given taxonomy{example}{example} \t\t\t @throws RepositoryException if the categories cannot be added{example}{example} |
| void {example}{example} | addCategories(Node node, String taxonomyName, String\[\] categoryPaths,  boolean system) throws RepositoryException;{example}{example} \t Adds several categories to the given node{example}{example} \t\t\t {example}{example} \t\t\t @param node The node for which we add the categories{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @param categoryPaths An array of category paths relative to the given taxonomy{example}{example} \t\t\t @param system check system provider or not{example}{example} \t\t\t @throws RepositoryException if the categories cannot be added{example}{example} |
| void {example}{example} | addCategory(Node node, String taxonomyName, String categoryPath) throws  RepositoryException;{example}{example} \t Adds a new category path to the given node{example}{example} \t\t\t {example}{example} \t\t\t @param node the node for which we add the category{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @param categoryPath The path of the category relative to the given taxonomy{example}{example} \t\t\t @throws RepositoryException if the category cannot be added{example}{example} |
| void {example}{example} | addCategory(Node node, String taxonomyName, String categoryPath,  boolean system) throws RepositoryException;{example}{example} \t Adds a new category path to the given node{example}{example} \t\t\t {example}{example} \t\t\t @param node the node for which we add the category{example}{example} \t\t\t @param taxonomyName The name of the taxonomy{example}{example} \t\t\t @param categoryPath The path of the category relative to the given taxonomy{example}{example} \t\t\t @param system check system provider or not{example}{example} \t\t\t @throws RepositoryException if the category cannot be added{example}{example} |
| Map<String, String\[\]> {example}{example} | getTaxonomyTreeDefaultUserPermission();{example}{example} \t\t get default permission for the user in taxonomy tree{example}{example} |
| void {example}{example} | addTaxonomyPlugin(ComponentPlugin plugin);{example}{example} \t Add a new taxonomy plugin to the service{example}{example} \t\t\t {example}{example} \t\t\t @param plugin The plugin to add{example}{example} |
| void {example}{example} | init(String repository) throws Exception;{example}{example} \t Initial all taxonomy plugins that have been already configured in xml files{example}{example} \t\t\t {example}{example} \t\t\t @param repository The name of repository{example}{example} \t\t\t @see TaxonomyPlugin{example}{example} \t\t\t @throws Exception{example}{example} {example}{example} |
