PublicationService to manage the publication

|| *Method* || *Return* || *Prototype* || *Description* ||
| {{addLifecycle}} | {{void}} | {{addLifecycle(ComponentPlugin plugin); }} |  Add plugins context for the publication service |
| {{getLifecycle}} | {{Lifecycle}} | {{Lifecycle getLifecycle(String name) ; }} | Get a specific Lifecycle with the given name {example}{example} @param name: Name of wanted Lifecycle|
| {{getLifecycles}} | {{List<Lifecycle>}} | {{List<Lifecycle> getLifecycles(); }} | Get all the Lyfecycle which were added to service instance |
| {{getContext}} | {{Context}} | {{Context getContext(String name) ; }} | Get a specific context with the given name |
| {{getContexts}} | {{List<Context>}} | {{List<Context> getContexts();}} | Get all the context which were added to service instance |
| {{getContents}} | {{List<Node>}} | {{List<Node> getContents(String fromstate, String tostate, String date, String user, String lang , String workspace) throws Exception; }} | Get all the node{example}{example}@param fromstate/tostate: the current range state of node{example}{example}@param @param user: The last user of node{example}{example}@param lang: the node's language{example}{example}@param workspace: the Workspace of node's location |
| {{getLifecyclesFromUser}} | {{List<Lyfecycle>}} | {{List<Lyfecycle> getLifecyclesFromUser(String remoteUser, String state);}} | Get all the Lifecycle of a specific user@param remoteUser current user of publication service{example}{example}@param state: Current state of the node |q
