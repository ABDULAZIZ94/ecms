This class is used to manage dynamic groovy templates for WCM-based products.

Package org.exoplatform.services.cms.views.ApplicationTemplateManager;

|| *Method* || *Return* || *Prototype* || *Description* ||
| *addPlugin* | {{void}} | addPlugin(PortletTemplatePlugin portletTemplatePlugin) {example}{example} throws Exception | Add the plugin.{example}{example}portletTemplatePlugin: the portlet template plugin|
| *getAllManagedPortletName* | {{List<String>}} | getAllManagedPortletName(String repository){example}{example} throws Exception| Retrieve all the portlet names that have dynamic groovy templates managed by service.{example}{example}repository: the repository{example}{example}@throws Exception the exception|
| *getTemplatesByApplication* | {{List<Node>}} | getTemplatesByApplication(String repository, String portletName, SessionProvider provider){example}{example} throws Exception; | Retrieve the templates node by application.{example}{example}@param repository: the repository{example}{example}@param portletName: the portlet name{example}{example}@param provider: the provider{example}{example}@return the templates by application{example}{example}@throws Exception: the exception|
| *getTemplatesByCategory* | {{List<Node>}} | getTemplatesByCategory(String repository, String portletName, String category, SessionProvider sessionProvider){example}{example} throws Exception; | Retrieve the templates node by category.{example}{example}@param repository: the repository{example}{example}@param portletName: the portlet name{example}{example}@param category: the category{example}{example}@param sessionProvider: the session provider{example}{example}@return the templates by category{example}{example}@throws Exception: the exception |
| *getTemplateByName* | {{Node}} | getTemplateByName(String repository, String portletName, String category, String templateName, SessionProvider sessionProvider){example}{example} throws Exception; | Retrieve the template by name.{example}{example}@param repository: the repository{example}{example}@param portletName: the portlet name{example}{example}@param category: the category{example}{example}@param templateName: the template name{example}{example}@param sessionProvider: the session provider{example}{example}@return the template by name{example}{example}@throws Exception: the exception |
| *getTemplateByPath* | {{Node}} | getTemplateByPath(String repository, String templatePath, SessionProvider sessionProvider){example}{example} throws Exception ; | Get the template by path.{example}{example}@param repository: the repository{example}{example}@param templatePath: the template path{example}{example}@param sessionProvider: the session provider{example}{example}@return the template by path{example}{example}@throws Exception: the exception |
| *addTemplate* | {{void}} | addTemplate(Node portletTemplateHome, PortletTemplateConfig config){example}{example} throws Exception; | Add the template. {example}{example} @param portletTemplateHome: the portlet template home{example}{example}@param config: the config{example}{example}@throws Exception: the exception |
| *removeTemplate* | {{void}} | removeTemplate(String repository, String portletName, String catgory, String templateName, SessionProvider sessionProvider){example}{example} throws Exception; | Remove the template.{example}{example} @param repository: the repository{example}{example}@param portletName: the portlet name{example}{example}@param catgory: the catgory{example}{example}@param templateName: the template name{example}{example}@param sessionProvider: the session provider{example}{example}@throws Exception: the exception |

