This class is responsible of getting contents inside the WCM product.
We shouldn't access directly contents from the jcr on front side.

In a general manner, this service stands between publication and cache.

|| Method || Return || Prototype || Desription ||
| getContent | Node | getContent(String repository, String workspace, String nodeIdentifier, HashMap<String, String> filters, SessionProvider sessionProvider){example}{example} throws Exception ; | returns content at the specified path based on filters.{example}{example}repository the repository{example}{example}workspace the workspace{example}{example}@param path the path{example}{example}@param filters the filters{example}{example}@param sessionProvider the session provider{example}{example}@return a jcr node{example}{example}@throws Exception the exception|
| getContents | List<Node> | getContents(String repository, String workspace, String path, HashMap<String, String> filters, SessionProvider sessionProvider){example}{example} throws Exception ; | returns contents at the specified path based on filters.{example}{example}{example}{example}@param repository the repository@param workspace the workspace{example}{example}@param path the path{example}{example}@param filters the filters{example}{example}@param sessionProvider the session provider{example}{example}{example}{example}@return a jcr node{example}{example}@throws Exception the exception|
| updateContent | boolean | updateContent(String repository, String workspace, String nodeIdentifier, HashMap<String, String> filters){example}{example} throws Exception; | Update content.{example}{example}{example}{example}repository the repository{example}{example}@param workspace the workspace{example}{example}@param path the path{example}{example}{example}{example}@param filters the filters{example}{example}{example}{example}@return true, if successful |
| updateContents | boolean | updateContents(String repository, String workspace, String path, HashMap<String, String> filters){example}{example} throws Exception; | Update contents.{example}{example}{example}{example}@param repository the repository{example}{example}@param workspace the workspace{example}{example}@param path the path{example}{example}@param filters the filters{example}{example}{example}{example}@return true, if successful |
| getAllowedStates | List<String> | getAllowedStates(String mode){example}{example} throws Exception ; | returns allowed states for a specified mode.{example}{example}{example}{example}@param mode the mode{example}{example}@return a jcr node{example}{example}@throws Exception the exception |
| cleanTemplates | void | cleanTemplates(){example}{example} throws Exception ; | initialize the templates hashmap{example}{example}{example}{example}@throws Exception the exception |
|  | boolean | isCached() {example}{example}throws Exception; | Check isCache or not{example}{example}@return the state of cache{example}{example}@throws Exception the exception |

