 This service is used to manage document's metadatas

|| *Method* || *Return* || *Prototype* || *Description* ||
| *{{getMetadataList}}* | {{List<String>}} | {{getMetadataList(String repository) throws Exception}} | Get name of all NodeType in repository {example}{example} @param repository    repository name {example}{example} @return              ArrayList of name {example}{example} @see {@link #getAllMetadatasNodeType(String)} |
| *{{getAllMetadatasNodeType}}* | {{List<NodeType>}} | {{getAllMetadatasNodeType(String repository) throws Exception}} | Get all NodeType in repository with NodeType = exo:metadata {example}{example} @param repository    repository name {example}{example} @return              ArrayList of NodeType |
| *{{addMetadata}}* | {{String}} | {{addMetadata(String nodetype, boolean isDialog, String role, String content, boolean isAddNew, String repository) throws Exception}} | Add new nodetype and set property  EXO\_ROLES\_PROP, EXO\_TEMPLATE\_FILE\_PROP for dialog template node or view template node if node doesn't exist {example}{example} Set property  EXO\_ROLES\_PROP, EXO\_TEMPLATE\_FILE\_PROP for dialog template node or view template node if node exists {example}{example} @param nodetype    Node name for processing {example}{example} @param isDialog    true for dialog template {example}{example} @param role        permission {example}{example} @param content     content of template {example}{example} @param isAddNew    false if nodetype exist in repository, true if not {example}{example} @param repository  repository name {example}{example} @return path to node if node exist, otherwise return null {example}{example} @throws Exception |
| *{{removeMetadata}}* | {{void}} | {{removeMetadata(String nodetype, String repository) throws Exception}} | Remove node named nodetype below baseMetadataPath {example}{example} @param nodetype      name of node {example}{example} @param repository    repository name |
| *{{getExternalMetadataType}}* | {{List<String>}} | {{getExternalMetadataType(String repository) throws Exception}} | Get all NodeType name that contains property that is not autocreated and name of NodeType differs from exo:metadata {example}{example} @param repository      repository name {example}{example} @return                ArrayList of metadata type |
| *{{getMetadataTemplate}}* | {{String}} | {{getMetadataTemplate(String name, boolean isDialog, String repository) throws Exception}} | Get content of dialog template node or view template in repository {example}{example} @param name            Node name {example}{example} @param isDialog        true: Get dialog template content false: Get view template content {example}{example} @param repository      repository name {example}{example} @return                content of template |
| *{{getMetadataPath}}* | {{String}} | {{getMetadataPath(String name, boolean isDialog, String repository) throws Exception}} | Get path to dialog template or view tempate node {example}{example} @param name            Node name {example}{example} @param isDialog        true: Get dialog template content false: Get view template content {example}{example} @param repository      repository name {example}{example} @return                path to template node |
| *{{getMetadataRoles}}* | {{String}} | {{getMetadataRoles(String name, boolean isDialog, String repository) throws Exception}} | Get permission of template node {example}{example} @param name            Node name {example}{example} @param isDialog        true: Get dialog template content false: Get view template content {example}{example} @param repository      repository name {example}{example} @return                String of permission |
| *{{hasMetadata}}* | {{boolean}} | {{hasMetadata(String name, String repository) throws Exception}} | Check node with given name exists or not below baseMetadataPath path in repositorys {example}{example} @param name            Node name {example}{example} @param repository      repository name {example}{example} @return                true : Exist this node name false: Not exist this node name |
| *{{init}}* | {{void}} | {{init(String repository) throws Exception}} | Call all available in list of TemplatePlugin to add some predefine template to repository {example}{example} @repository        repository name {example}{example} @throws Exception |
