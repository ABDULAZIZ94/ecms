This service is used to manage the watch document feature in WCM

|| *Method* || *Return* || *Prototype* || *Description* ||
| *{{watchDocument}}* | {{void}} | {{watchDocument(Node documentNode, String userName, int notifyType) throws Exception}} | Watching the document that is specified by the node by giving a userName, notifyType. If the document is watching, all thing that changes to it's property will be notified to user specified by the userName {example}{example} @param documentNode      Specify the document for watching {example}{example} @param userName          he username of current user is votting. It can't be <code>null<code> {example}{example} @param notifyType        Type of notification. Its can be 0, 1 or 2 {example}{example}                          0 : Notification by email {example}{example}                          1 : Notification by rss {example}{example}                          2 : Full notification {example}{example} @see                     Node {example}{example} @throws Exception |
| *{{getNotificationType}}* | {{int}} | {{getNotificationType(Node documentNode, String userName) throws Exception}} | This method will gets the type of notification for the specify document. If that document is not a exo:watchable document, the value return is \a-1. If notification is notified by email, the value return is 1. If notification is notified by rss, the value return is 2. If notification is notified by rss and email, the value return is 0 {example}{example} @param documentNode      Specify the document for watching {example}{example} @param userName          The username of current user is votting. It can't be <code>null<code> {example}{example} @see                     Node {example}{example} @return                  0, 1, 2 or \a-1 {example}{example} @throws Exception |
| *{{unwatchDocument}}* | {{void}} | {{unwatchDocument(Node documentNode, String userName, int notificationType) throws Exception}} | UnWatching the document that is specified by the node by giving a userName, notifyType. If the document is unwatching, all thing that changes to it's property will not be notified to user specified by the userName {example}{example} @param documentNode      Specify the document for watching {example}{example} @param userName          The username of current user is votting. It can't be <code>null<code> {example}{example} @param notifyType        Type of notification. Its can be 0, 1 or 2 {example}{example}                          0 : Notification by email {example}{example}                          1 : Notification by rss {example}{example}                          2 : Full notification {example}{example} @param sessionProvider   The sessionProvider object is userd to managed Sessions {example}{example} @see                     Node {example}{example} @throws Exception |
