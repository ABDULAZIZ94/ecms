CmsService is used for working with nodes. In this service there are many functions which allow you to add, edit, move node.

h1. API

|| Method Summary || ||
| String\t | storeNode(String workspace, String nodetypeName, String storePath, Map inputProperties,String repository) throws Exception;{example}{example}\t\t\t Returns path to saved node{example}{example}\t\t\t @param workspace: name of workspace{example}{example}\t\t\t @param nodetypeName: NodeType's name{example}{example}\t\t\t @param storePath: Path to store node{example}{example}\t\t\t @param inputProperties: Map of node's property including (property name, value){example}{example}\t\t\t @param repository: Repository's name{example}{example}\t\t\t @throws Exception: throws exception |
| String\t | storeNode(String nodetypeName, Node storeHomeNode, Map inputProperties, boolean isAddNew,String repository) throws Exception;{example}{example}\t\t\t Returns path to saved node{example}{example}\t\t\t @param nodetypeName: NodeType's name{example}{example}\t\t\t @param storeHomeNode: Parent node, where node is stored{example}{example}\t\t\t @param inputProperties: Map of node's property including (property name, value){example}{example}\t\t\t @param isAddNew: flag to decide whether this situation is adding node or updating node{example}{example}\t\t\t @param repository: Repository's name{example}{example}\t\t\t @throws Exception: throws exception |
| String\t | storeEditedNode(String nodetypeName, Node storeNode, Map inputProperties, boolean isAddNew,String repository) throws Exception;{example}{example}\t\t\t Returns path to saved node{example}{example}\t\t\t @param nodetypeName: NodeType's name{example}{example}\t\t\t @param storeNode: Node is stored{example}{example}\t\t\t @param inputProperties: Map of node's property including (property name, value){example}{example}\t\t\t @param isAddNew: flag to decide whether this situation is adding node or updating node{example}{example}\t\t\t @param repository: Repository's name{example}{example}\t\t\t @throws Exception: throws exception |
| String\t | storeNodeByUUID(String nodetypeName, Node storeNode, Map inputProperties, boolean isAddNew,String repository) throws Exception;{example}{example}\t\t\t Returns return UUID of saved node{example}{example}\t\t\t @param nodetypeName: NodeType's name{example}{example}\t\t\t @param storeNode: Node is stored{example}{example}\t\t\t @param inputProperties: Map of node's property including (property name, value){example}{example}\t\t\t @param isAddNew: flag to decide whether this situation is adding node or updating node{example}{example}\t\t\t @param repository: Repository's name{example}{example}\t\t\t @throws Exception: throws exception |
| void\t | moveNode(String nodePath, String srcWorkspace, String destWorkspace, String destPath, String repository){example}{example}\t\t\t @param nodePath: Path to node in source workspace{example}{example}\t\t\t @param srcWorkspace: Source workspace name{example}{example}\t\t\t @param destWorkspace: Destination of workspace name{example}{example}\t\t\t @param destPath: Destination of node path{example}{example}\t\t\t @param repository: Repository's name{example}{example}
\t\t\t @throws Exception: throws exception |
