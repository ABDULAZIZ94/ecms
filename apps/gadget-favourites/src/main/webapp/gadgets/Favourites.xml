<?xml version="1.0" encoding="UTF-8" ?>

<Module>
	<ModulePrefs author="eXoPlatform"
		title="Favourite documents"
		directory_title="Favourite documents"
		title_url="http://www.exoplatform.org"
		description="The favourite documents documents"
    thumbnail="http://localhost:8080/favourites/skin/DefaultSkin/gadgetIcons/PublishedDocument.png"
		height="227">
         <Require feature="opensocial-0.7" /> 
         <Require feature="dynamic-height"/>
	</ModulePrefs>
	<Content type="html">
	<![CDATA[
	
		<script type="text/javascript" src="/favourites/javascript/script.js">


               </script>
		
		<style type="text/css">
			body{
				font: 11px Tahoma,Verdana,Arial,Helvetica,sans-serif;
				height:100%;
				margin:0 auto;
				padding:0;
			}
			
			a {
				text-decoration: none;
			}
			
			.FloatLeft{
				float: left;
			}
			.FloatRight{
				float: right;
			}
			.ClearRight{
				clear:right;
			}
			.ClearLeft{
				clear: left;
			}
			
			.GadgetBgTitleLeft{
				background:transparent url("/favourites/skin/images/ImageGadGets.gif") no-repeat left -70px;
				padding-left: 4px;
			}
			
			.GadgetBgTitleCenter{
				background:transparent url("/favourites/skin/images/ImageGadGets.gif") repeat-x left -92px;
				height: 22px;
			}
			
			.GadgetBgTitleRight{
				background:transparent url("/favourites/skin/images/ImageGadGets.gif") no-repeat right -70px;
				padding-right:3px;
			}
			
			.TxtTitleGadget {
				font-weight: bold;
				float: left;
				line-height: 22px;
				color: #5b5b5b;
				padding-left: 8px;
			}
			
			.GadgetBgTitleCenter .IconEditGadGet{
				background:transparent url("/favourites/skin/images/ImageGadGets.gif") no-repeat center -180px;
				display: block;
				height: 13px;
				width: 13px;
				padding: 6px 2px 0px 2px;
			}
			
			.GadgetBgTitleCenter .IconMinimize{
				background:transparent url("/favourites/skin/images/ImageGadGets.gif") no-repeat center -202px;
				display: block;
				height: 13px;
				width: 13px;
				padding: 6px 2px 0px 2px;
			}
			
			.GadgetBgTitleCenter .IconClose{
				background:transparent url("/favourites/skin/images/ImageGadGets.gif") no-repeat center -224px;
				display: block;
				height: 13px;
				width: 13px;
				padding: 6px 2px 0px 2px;
			}
			
			/**************************** Content Gadgets *********************************/
			
			.ContentGadGet{
			}
			
			.ContentGadGet .BgLeftTitleContent{
				background:transparent url("/favourites/skin/images/ImageGadGets.gif") no-repeat left top;	
				padding-left: 6px;
			}
			
			.ContentGadGet .BgCentertTitleContent{
				background:transparent url("/favourites/skin/images/ImageGadGets.gif") repeat-x left -35px;	
				height: 35px;
				line-height: 35px;
			}
			
			.ContentGadGet .BgRightTitleContent{
				background: url("/favourites/skin/images/ImageGadGets.gif") no-repeat right top;	
				padding-right: 8px;
			}
			.ContentGadGet .IconArrow{
				background: url("/favourites/skin/images/ImageGadGets.gif") no-repeat right -246px;
				float: right;
				height: 35px;
				width: 16px;
			}
			.ContentGadGet .TextTitle{
				color: #fff;
				font-weight: bold;
			}
			
			.ContentGadGet .BgLeftFooterContent{
				background: url("/favourites/skin/images/ImageGadGets.gif") no-repeat left -114px;	
				padding-left: 9px;
			}
			
			.ContentGadGet .BgCenterFooterContent{
				background: url("/favourites/skin/images/ImageGadGets.gif") repeat-x center -130px;
				height: 8px;
			}
			
			.ContentGadGet .BgRightFooterContent{
				background: url("/favourites/skin/images/ImageGadGets.gif") no-repeat right -122px;	
				padding-right: 8px;
			}
			
			.ContentGadGet .BgCenterContent{
				background: url("/favourites/skin/images/BgBottomConten.gif") repeat-x left bottom;
			}
			.ContentGadGet .BgLeftContent{
				border-left: solid 1px #9c9c9c;
			}
			
			.ContentGadGet .BgRightContent{
				background: url("/favourites/skin/images/GagetBorRight.gif") repeat-y right top;
				padding-right: 3px;
			}
			
			.ContentGadGet .BgRightContent .IconDriver {
				background: url("/favourites/skin/images/ImageGadGets.gif") no-repeat left -281px;
			
			}
			
			.ContentGadGet .BgRightContent .IconPdf {
				background: url("/favourites/skin/images/ImageGadGets.gif") no-repeat left -352px;
			}
			
			.ContentGadGet .BgRightContent .IconDoc {
				background: url("/favourites/skin/images/ImageGadGets.gif") no-repeat left -396px;
			}
			
			.ContentGadGet .BgRightContent .IconJpg {
				background: url("/favourites/skin/images/ImageGadGets.gif") no-repeat left -440px;
			}
			
			.ContentGadGet .BgRightContent .IconNote {
				background:transparent url("/favourites/skin/images/ImageGadGets.gif") no-repeat left -308px;
			}
			
			.ContentGadGet .BgRightContent .BgTitle{
				background: #dfeefa;
				width: auto;
				line-height: 16px;
				font-weight: bold;
				color: #468bcc;
			}
			
			.ContentGadGet .BgRightContent .ItemIcon {
				border-bottom:1px solid #CCCCCC;
				line-height: 16px;
				margin: 0px 5px 0px 11px;
				padding: 0px 0 0px 22px;
				width: auto;
			}
			
			.ContentGadGet .BgRightContent .NotAvailableItemIcon {
				margin: 0px 5px 0px 11px;
				padding:5px;
				text-align: center;
				font-style: italic;
				color: #EF5604;
				width: auto;
				font-weight:normal;
				height:30px;
			}
			
			
			.ContentGadGet .BgRightContent .TextDateTime{
				color: #83add4;
				float: left;
				padding-left: 26px;
			}
			
			.ContentGadGet .BgRightContent  .DateTime{
				color: #83add4;
				font-weight: nomarl;
			}
			
			.ContentGadGet .BgRightContent a{
				color: #000;
				display: block;
			}
			
			.ContentGadGet .BgRightContent a:hover{
				color: orange;
			}
	  </style>

          <script type="text/javascript">

                        function Favourite() {}
			
			var prefixUrl = location.protocol + '//' + location.hostname;
			if (location.port) {
				prefixUrl += ':' + location.port;
			}
  
                       Favourite.prototype.makeRequest = function(url, callback) {
				var params = {};
				params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.GET;
				params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
                                var ts = new Date().getTime();
    			        var sep = "?";
 			        if (refreshInterval && refreshInterval > 0) {
          			    ts = Math.floor(ts / refreshInterval);
	 		        }

                                url = [ url, sep, "nocache=", ts ].join("");
				gadgets.io.makeRequest(url, callback, params);
			}
			

                        Favourite.prototype.getCmisDocument = function(driveName, path) {
				var params = {};
				params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.GET;
				params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.DOM;
                                var url = accessUrl;
				url += driveName;
				url += '/objectbypath?path=';
				 /** url += path; */
                                url += '/Users/' + userId +'/Private/Favorites/'+ path.substring(path.lastIndexOf("/")+1);
				gadgets.io.makeRequest(url, favourite.getCmisContent, params);
			}



                        Favourite.prototype.getCmisContent = function(response) {
                             var xmlDoc = loadXMLString(response.text);
                             x=xmlDoc.getElementsByTagName("id")[0];
                             if (!x) alert("Unable to retrieve item.");
			     y=x.childNodes[0];
			     var obj_id=y.nodeValue; 
                             if (obj_id && (obj_id.length > 0)) 
                             {
                               var url = accessUrl;
                               url += "collaboration";
                               url += "/file/";
                               url += obj_id;
                               window.open(url, "Downloading file...");
                             } 
                              else 
                             {
                               alert("Unable to retrieve item.");
                             }
			}

                         


			 Favourite.prototype.loadUser = function() {
			  var req = opensocial.newDataRequest();
			  var opts = {};
			  opts[opensocial.DataRequest.PeopleRequestFields.PROFILE_DETAILS] = [
			            opensocial.Person.Field.PROFILE_URL];
			
			  req.add(req.newFetchPersonRequest("VIEWER", opts), 'viewer');
			  req.send(onLoadUser);
			
			  function onLoadUser(data) {
			    if (!data.hadError()) {
			            this.viewer = data.get('viewer').getData();
			            var profile_url =  this.viewer.getField(opensocial.Person.Field.PROFILE_URL);
			            userId = profile_url.substr(profile_url.lastIndexOf('/') + 1);
                                    favourite.init(userId);
			    }
			  }

			}





                         
			function loadXMLString(txt)
			{
                        var xmlDoc = null;
			if (window.DOMParser)
			  {
			  parser=new DOMParser();
			  xmlDoc=parser.parseFromString(txt,"text/xml");
			  }
			else // Internet Explorer
			  {
			  xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
			  xmlDoc.async="false";
			  xmlDoc.loadXML(txt);
			  }
			return xmlDoc;
			}



			Favourite.prototype.init = function(userId) {

                         siteUrl = prefixUrl + '/rest/favorite/all/repository/collaboration/' + userId;
                         accessUrl = prefixUrl + '/rest/cmisatom/';
                         refreshInterval = 10000;


				favourite.makeRequest(siteUrl,favourite.displayValue);
			}


                       Favourite.prototype.displayValue = function(resp) {
				var data = eval(resp.data.listFavorite);
				var editedDocList = _gel("ListEditDocumentNode");
				var displayTime = new DisplayTime();
				if (editedDocList) {
					 while (editedDocList.hasChildNodes()) {
					  	editedDocList.removeChild(editedDocList.lastChild);
					  }
				}
				for (var i = 0; i < data.length; i++) {
					var doc = data[i];
					var AppClass = document.createElement('div');
					var showHTML = "<a  style=\"cursor: pointer;\" "   
                                        showHTML += "onclick=\"favourite.getCmisDocument('";
                                        showHTML += doc.driveName;
                                        showHTML += "'";
                                        showHTML += ",";
                                        showHTML += "'";
                                        showHTML += doc.path;
                                        showHTML += "'";
                                        showHTML += ")";
                                        showHTML += "\"";
					showHTML += ">";
					showHTML += doc.name;
					showHTML += "</a>";
					showHTML += "<div class='DateTime'>";
					showHTML += "Added ";
					showHTML += displayTime.timeToPrettyString(doc.dateAddFavorite);
					showHTML += "</div>";

					AppClass.innerHTML = showHTML;
					AppClass.className = 'ItemIcon';
					editedDocList.appendChild(AppClass);
				}
				var title = _gel("BgTitle");
				if (data && (data.length > 0) && title) {
					editedDocList.parentNode.removeChild(title);
				}
				gadgets.window.adjustHeight();

			}

                        var favourite = new Favourite();
      		        favourite.loadUser();

			 /*gadgets.util.registerOnLoadHandler(favourite.init);*/

          </script>

         <body>
				
			<div class="ContentGadGet">
				<div class="BgLeftTitleContent">
					<div class="BgRightTitleContent">
						<div class="BgCentertTitleContent">
							<div class="IconArrow"><span></span></div>
							<div class="TextTitle">Favourite Documents</div>
							<div class="ClearRight"><span></span></div>
						</div>
					</div>
				</div>
				<div class="BgRightContent">
					<div class="BgLeftContent">
						<div class="BgCenterContent">
							<div id="BgTitle" class="BgTitle">
								<div class="NotAvailableItemIcon">
									Not available document!
								</div>
							</div>
							<div id="ListEditDocumentNode" class="ListEditDocumentNode">
							</div>
						</div>
					</div>
				</div>
				<div class="BgLeftFooterContent">
					<div class="BgRightFooterContent">
						<div class="BgCenterFooterContent"><span></span></div>
					</div>
				</div>
			</div>
		</body>
	]]>
	</Content>
</Module>

 
