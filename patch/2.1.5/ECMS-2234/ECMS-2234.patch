Index: ext/xcmis/sp/src/test/java/org/exoplatform/ecms/xcmis/sp/StorageTest.java
===================================================================
--- ext/xcmis/sp/src/test/java/org/exoplatform/ecms/xcmis/sp/StorageTest.java	(revision 69257)
+++ ext/xcmis/sp/src/test/java/org/exoplatform/ecms/xcmis/sp/StorageTest.java	(working copy)
@@ -43,8 +43,11 @@
 import org.xcmis.spi.model.impl.StringProperty;
 import org.xcmis.spi.utils.MimeType;
 
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Calendar;
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.HashSet;
@@ -482,6 +485,15 @@
       assertEquals("root", document.getCreatedBy());
       assertEquals("root", document.getLastModifiedBy());
       assertNotNull(document.getCreationDate());
+
+      Calendar c = document.getCreationDate();
+      DateFormat ISO_8601_DATE_TIME = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm");
+      String creationDate = ISO_8601_DATE_TIME.format(c.getTime());
+      c = Calendar.getInstance();
+      String expectedDate = ISO_8601_DATE_TIME.format(c.getTime());
+      
+      assertEquals(expectedDate, creationDate);
+      
       assertNotNull(document.getLastModificationDate());
       assertEquals(documentNode.getVersionHistory().getUUID(), document.getVersionSeriesId());
       assertNull(document.getVersionSeriesCheckedOutBy());
Index: ext/xcmis/sp/src/test/java/org/exoplatform/ecms/xcmis/sp/query/QueryUsecasesTest.java
===================================================================
--- ext/xcmis/sp/src/test/java/org/exoplatform/ecms/xcmis/sp/query/QueryUsecasesTest.java	(revision 69257)
+++ ext/xcmis/sp/src/test/java/org/exoplatform/ecms/xcmis/sp/query/QueryUsecasesTest.java	(working copy)
@@ -37,6 +37,9 @@
 import org.xcmis.spi.utils.MimeType;
 
 import java.math.BigDecimal;
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
 import java.util.List;
 
 /**
@@ -1027,7 +1030,41 @@
 
       checkResult(storageA, result, new DocumentData[]{doc2});
    }
+   
+   /**
+    * Same as testSimpleFulltext.
+    * @throws Exception
+    */
+   public void testSearchOnDate() throws Exception
+   {
+      String name1 = "fileFirst";
 
+      FolderData folder = createFolder(storageA, testRoot, "SimpleFullTextTest", folderTypeDefinition);
+      DocumentData doc1 =
+         createDocument(storageA, folder, name1, nasaDocumentTypeDefinition, new byte[0], new MimeType("text", "plain"));
+      setProperty(doc1, new StringProperty(PROPERTY_COMMANDER, PROPERTY_COMMANDER, PROPERTY_COMMANDER,
+         PROPERTY_COMMANDER, "There must be test word"));
+      
+      Calendar c = doc1.getCreationDate();
+      DateFormat ISO_8601_DATE_TIME = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZZZZZ");
+      
+      c.add(Calendar.MILLISECOND, -1);
+      String beforeDate = ISO_8601_DATE_TIME.format(c.getTime());
+      beforeDate = beforeDate.substring(0, 26) + ":" + beforeDate.substring(26); 
+      
+      c.add(Calendar.MILLISECOND, 2);
+      String afterDate = ISO_8601_DATE_TIME.format(c.getTime());
+      afterDate = afterDate.substring(0, 26) + ":" + afterDate.substring(26); 
+      
+      String statement = "SELECT * FROM cmis:document WHERE cmis:creationDate>=TIMESTAMP '" + beforeDate + "' AND cmis:creationDate<=TIMESTAMP '" + afterDate + "'";
+      Query query = new Query(statement, true);
+      ItemsIterator<Result> result = storageA.query(query);
+      
+      assertEquals("Search resuls with the query \n '" + statement + "'.", 1, result.size());
+
+      checkResult(storageA, result, new DocumentData[]{doc1});
+   }
+
    /**
     * Test complex fulltext query.
     * <p>
Index: ext/xcmis/sp/src/main/java/org/exoplatform/ecms/xcmis/sp/BaseJcrStorage.java
===================================================================
--- ext/xcmis/sp/src/main/java/org/exoplatform/ecms/xcmis/sp/BaseJcrStorage.java	(revision 69257)
+++ ext/xcmis/sp/src/main/java/org/exoplatform/ecms/xcmis/sp/BaseJcrStorage.java	(working copy)
@@ -44,6 +44,7 @@
 import org.xcmis.spi.model.TypeDefinition;
 import org.xcmis.spi.model.Updatability;
 import org.xcmis.spi.model.VersioningState;
+import org.xcmis.spi.utils.CmisUtils;
 
 import java.math.BigDecimal;
 import java.math.BigInteger;
@@ -351,9 +352,7 @@
     */
    private String createJcrDate(Calendar c)
    {
-      return String.format("%04d-%02d-%02dT%02d:%02d:%02d.%03dZ", c.get(Calendar.YEAR), c.get(Calendar.MONTH) + 1, c
-         .get(Calendar.DAY_OF_MONTH), c.get(Calendar.HOUR_OF_DAY), c.get(Calendar.MINUTE), c.get(Calendar.SECOND), c
-         .get(Calendar.MILLISECOND));
+      return CmisUtils.convertToString(c);
    }
 
    /**

