Index: apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/clv/UICLVFolderMode.java
===================================================================
--- apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/clv/UICLVFolderMode.java	(revision 72463)
+++ apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/clv/UICLVFolderMode.java	(working copy)
@@ -102,11 +102,13 @@
     filters.put(WCMComposer.FILTER_MODE, Utils.getCurrentMode());
     String orderBy = preferences.getValue(UICLVPortlet.PREFERENCE_ORDER_BY, null);
     String orderType = preferences.getValue(UICLVPortlet.PREFERENCE_ORDER_TYPE, null);
+    String sharedCache = preferences.getValue(UICLVPortlet.PREFERENCE_SHARED_CACHE, "true");
     if (orderType == null) orderType = "DESC";
     if (orderBy == null) orderBy = "exo:title";
     filters.put(WCMComposer.FILTER_ORDER_BY, orderBy);
     filters.put(WCMComposer.FILTER_ORDER_TYPE, orderType);
     filters.put(WCMComposer.FILTER_LANGUAGE, Util.getPortalRequestContext().getLocale().getLanguage());
+    filters.put(WCMComposer.FILTER_VISIBILITY, ("true".equals(sharedCache))?WCMComposer.VISIBILITY_PUBLIC:WCMComposer.VISIBILITY_USER);
 
     String folderPath = this.getAncestorOfType(UICLVPortlet.class).getFolderPath();
     
Index: apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/clv/UICLVManualMode.java
===================================================================
--- apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/clv/UICLVManualMode.java	(revision 72463)
+++ apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/clv/UICLVManualMode.java	(working copy)
@@ -27,7 +27,9 @@
 import org.exoplatform.portal.webui.application.UIPortlet;
 import org.exoplatform.resolver.ResourceResolver;
 import org.exoplatform.services.wcm.core.NodeLocation;
+import org.exoplatform.services.wcm.publication.WCMComposer;
 import org.exoplatform.wcm.webui.Utils;
+import org.exoplatform.wcm.webui.scv.UISingleContentViewerPortlet;
 import org.exoplatform.webui.config.annotation.ComponentConfig;
 import org.exoplatform.webui.config.annotation.EventConfig;
 import org.exoplatform.webui.core.lifecycle.Lifecycle;
@@ -54,14 +56,21 @@
 	@SuppressWarnings("unchecked")
   public void init() throws Exception {
 	  PortletPreferences portletPreferences = Utils.getAllPortletPreferences();
-    String[] listContent = portletPreferences.getValue(UICLVPortlet.PREFERENCE_ITEM_PATH, null).split(";");
+	  String sharedCache = portletPreferences.getValue(UISingleContentViewerPortlet.ENABLE_CACHE, "true");
+	  sharedCache = "true".equals(sharedCache) ? WCMComposer.VISIBILITY_PUBLIC:WCMComposer.VISIBILITY_USER;    
+
+	  String[] listContent = portletPreferences.getValue(UICLVPortlet.PREFERENCE_ITEM_PATH, null).split(";");
     int itemsPerPage = Integer.parseInt(portletPreferences.getValue(UICLVPortlet.PREFERENCE_ITEMS_PER_PAGE, null));
     List<Node> nodes = new ArrayList<Node>();
     if (listContent != null && listContent.length != 0) {
       for (String itemPath : listContent) {
       	NodeLocation nodeLocation = NodeLocation.getNodeLocationByExpression(itemPath);
-      	Node viewNode = Utils.getViewableNodeByComposer(nodeLocation.getRepository(), 
-      	    Text.escapeIllegalJcrChars(nodeLocation.getWorkspace()), Text.escapeIllegalJcrChars(nodeLocation.getPath()));
+      	Node viewNode = Utils.getViewableNodeByComposer(nodeLocation.getRepository(),
+                                                        Text.escapeIllegalJcrChars(nodeLocation.getWorkspace()), 
+                                                        Text.escapeIllegalJcrChars(nodeLocation.getPath()),
+                                                        null,
+                                                        sharedCache);
+      	                                                
       	if (viewNode != null) nodes.add(viewNode);    
       }
     }
Index: apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/clv/UICLVConfig.java
===================================================================
--- apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/clv/UICLVConfig.java	(revision 72463)
+++ apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/clv/UICLVConfig.java	(working copy)
@@ -165,7 +165,13 @@
 
   /** The Constant PAGINATOR_TEMPLATE_CATEGORY. */
   public final static String PAGINATOR_TEMPLATE_CATEGORY            = "paginators";
+ 
+  /** The Constant CACHE_ENABLE_RADIOBOX_INPUT */
+  public static final String CACHE_ENABLE_RADIOBOX_INPUT             = "UICLVConfigCacheEnableRadioBoxInput";
   
+  /** The Constant CACHE_MANAGEMENT_LABEL */
+  public static final String CACHE_MANAGEMENT_LABEL                  = "UICLVConfigCacheManagementLabel";  
+  
   /** TODO: Need to improve, we should get portlet's name by API, not hardcode like this */
   /** The Constant PORTLET_NAME. */
   public final static String PORTLET_NAME                           = "Content List Viewer";
@@ -179,6 +185,10 @@
   public final static String CATEGORIES_CONTENT_TYPE				= "CategoryContents";
   public final static String CATOGORIES_NAVIGATION_TYPE				= "CategoryNavigation";
   
+  /** The constant values for cache */
+  public static final String ENABLE_CACHE                            = "ENABLE";
+  public static final String DISABLE_CACHE                           = "DISABLE";
+  
   /** The popup id. */
   private String popupId;
   
@@ -271,6 +281,7 @@
     String showClvBy = portletPreferences.getValue(UICLVPortlet.PREFERENCE_SHOW_CLV_BY, null);
     String targetPage = portletPreferences.getValue(UICLVPortlet.PREFERENCE_TARGET_PAGE, null);
     String showScvWith = portletPreferences.getValue(UICLVPortlet.PREFERENCE_SHOW_SCV_WITH, null);
+    String isCacheEnabled = portletPreferences.getValue(UICLVPortlet.PREFERENCE_CACHE_ENABLED, null);
     
     boolean showAutomaticDetection = Boolean.parseBoolean(portletPreferences.getValue(UICLVPortlet.PREFERENCE_AUTOMATIC_DETECTION, null));
 //    boolean showIlustration  = Boolean.parseBoolean(portletPreferences.getValue(UICLVPortlet.PREFERENCE_SHOW_ILLUSTRATION, null));
@@ -414,6 +425,15 @@
     targetPageInputSet.setActionInfo(TARGET_PAGE_FORM_STRING_INPUT, new String[] {"SelectTargetPage"}) ;
     targetPageInputSet.addUIFormInput(basePathInput);
     
+    /** CACHE MODE */
+    List<SelectItemOption<String>> cacheOptions = new ArrayList<SelectItemOption<String>>();
+    cacheOptions.add(new SelectItemOption<String>(ENABLE_CACHE, ENABLE_CACHE));
+    cacheOptions.add(new SelectItemOption<String>(DISABLE_CACHE, DISABLE_CACHE));
+    UIFormRadioBoxInput cacheEnableRadioBoxInput = new UIFormRadioBoxInput(CACHE_ENABLE_RADIOBOX_INPUT,
+                                                                           CACHE_ENABLE_RADIOBOX_INPUT,
+                                                                           cacheOptions);
+    cacheEnableRadioBoxInput.setValue("true".equals(isCacheEnabled)? ENABLE_CACHE : DISABLE_CACHE);
+    
     /** ALLOW DYNAMIC URL */
     UIFormStringInput showScvWithInput = new UIFormStringInput(SHOW_SCV_WITH_STRING_INPUT, SHOW_SCV_WITH_STRING_INPUT, showScvWith);
     if (appType.equals(CATOGORIES_NAVIGATION_TYPE)) {
@@ -459,6 +479,7 @@
     addChild(showClvByInput);
     addChild(targetPageInputSet);
     addChild(showScvWithInput);
+    addChild(cacheEnableRadioBoxInput);
     
     if (contextualFolderMode != null && contextualFolderMode.equals(UICLVPortlet.PREFERENCE_CONTEXTUAL_FOLDER_ENABLE))
       isShowAdvancedBlock_ = true;
@@ -651,6 +672,9 @@
       if (showScvWith == null || showScvWith.length() == 0)
         showScvWith = UICLVPortlet.DEFAULT_SHOW_SCV_WITH;
       
+      String cacheEnabled = ((UIFormRadioBoxInput) clvConfig.
+          getChildById(UICLVConfig.CACHE_ENABLE_RADIOBOX_INPUT)).getValue();
+      
       /** SET VALUES TO PREFERENCES */
       PortletRequestContext portletRequestContext = (PortletRequestContext) event.getRequestContext();
       PortletPreferences portletPreferences = portletRequestContext.getRequest().getPreferences();
@@ -684,6 +708,7 @@
       portletPreferences.setValue(UICLVPortlet.PREFERENCE_SHOW_CLV_BY, showClvBy);
       portletPreferences.setValue(UICLVPortlet.PREFERENCE_TARGET_PAGE, targetPage);
       portletPreferences.setValue(UICLVPortlet.PREFERENCE_SHOW_SCV_WITH, showScvWith);
+      portletPreferences.setValue(UICLVPortlet.PREFERENCE_CACHE_ENABLED, ENABLE_CACHE.equals(cacheEnabled)?"true":"false");
       portletPreferences.store();
       
       UICLVPortlet portlet = clvConfig.getAncestorOfType(UICLVPortlet.class);
Index: apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/clv/UICLVPortlet.java
===================================================================
--- apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/clv/UICLVPortlet.java	(revision 72463)
+++ apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/clv/UICLVPortlet.java	(working copy)
@@ -149,6 +149,9 @@
 
   /** The Constant PREFERENCE_SHOW_CLV_BY. */
   public final static String PREFERENCE_SHOW_CLV_BY					= "showClvBy";
+
+  /** The Constant PREFERENCE_CACHE_ENABLED. */
+  public final static String PREFERENCE_CACHE_ENABLED             = "sharedCache";
   
   /** The Constant DISPLAY_MODE_MANUAL. */
   public static final String DISPLAY_MODE_MANUAL					= "ManualViewerMode";
@@ -159,8 +162,10 @@
   public static final String DEFAULT_SHOW_CLV_BY					= "folder-id";
   public static final String DEFAULT_SHOW_SCV_WITH					= "content-id";
   
-  public static final String PREFERENCE_APPLICATION_TYPE			= "application";			
+  public static final String PREFERENCE_APPLICATION_TYPE			= "application";
   
+  public static final String PREFERENCE_SHARED_CACHE     = "sharedCache";    
+  
   private PortletMode     mode;
   
   private UICLVFolderMode folderMode;
@@ -231,16 +236,17 @@
    */
   public void processRender(WebuiApplication app, WebuiRequestContext context) throws Exception {
     PortletRequestContext pContext = (PortletRequestContext) context;
+    PortletPreferences preferences = pContext.getRequest().getPreferences();
+    Boolean sharedCache = "true".equals(preferences.getValue(PREFERENCE_SHARED_CACHE, "true")); 
     
-  	if (context.getRemoteUser()==null) {
+    if (context.getRemoteUser()==null ||
+        (!"Edit".equals(Utils.getCurrentMode()) && sharedCache)) {
       WCMService wcmService = getApplicationComponent(WCMService.class);
 	    pContext.getResponse().setProperty(MimeResponse.EXPIRATION_CACHE, ""+wcmService.getPortletExpirationCache());
 	    if (log.isTraceEnabled())
 	      log.trace("CLV rendering : cache set to "+wcmService.getPortletExpirationCache());
-  	  }
+	  }
 
-    
-    PortletPreferences preferences = pContext.getRequest().getPreferences();
     String displayMode = preferences.getValue(PREFERENCE_DISPLAY_MODE, null);
 
     PortletMode currentMode = pContext.getApplicationMode();
Index: apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/scv/UISingleContentViewerPortlet.java
===================================================================
--- apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/scv/UISingleContentViewerPortlet.java	(revision 72463)
+++ apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/scv/UISingleContentViewerPortlet.java	(working copy)
@@ -27,6 +27,7 @@
 import org.exoplatform.services.cms.templates.TemplateService;
 import org.exoplatform.services.wcm.core.WCMService;
 import org.exoplatform.services.wcm.publication.WCMComposer;
+import org.exoplatform.services.wcm.utils.WCMCoreUtils;
 import org.exoplatform.wcm.webui.Utils;
 import org.exoplatform.webui.application.WebuiApplication;
 import org.exoplatform.webui.application.WebuiRequestContext;
@@ -36,6 +37,8 @@
 import org.exoplatform.webui.core.UIPortletApplication;
 import org.exoplatform.webui.core.lifecycle.UIApplicationLifecycle;
 import org.w3c.dom.Element;
+import org.exoplatform.services.jcr.RepositoryService;
+import org.exoplatform.services.jcr.core.ManageableRepository;
 import org.exoplatform.services.log.ExoLogger;
 import org.exoplatform.services.log.Log;
 
@@ -94,6 +97,9 @@
 
   public static final String DEFAULT_SHOW_SCV_WITH                  = "content-id";
   
+  /** The Cache */
+  public static final String ENABLE_CACHE = "sharedCache";
+  
   private PortletMode mode = null;//PortletMode.VIEW ;
 
   public static final String UIPreferencesPopupID = "UIPreferencesPopupWindows";
@@ -148,8 +154,11 @@
   public void processRender(WebuiApplication app, WebuiRequestContext context) throws Exception {
     PortletRequestContext pContext = (PortletRequestContext) context ;
     PortletMode newMode = pContext.getApplicationMode() ;
+    PortletPreferences preferences = pContext.getRequest().getPreferences();
+    Boolean sharedCache = "true".equals(preferences.getValue(ENABLE_CACHE, "true"));
 
-  	if (context.getRemoteUser()==null) {
+    if (context.getRemoteUser()==null ||
+        (!"Edit".equals(Utils.getCurrentMode()) && sharedCache)) {
       WCMService wcmService = getApplicationComponent(WCMService.class);
   	  pContext.getResponse().setProperty(MimeResponse.EXPIRATION_CACHE, ""+wcmService.getPortletExpirationCache());
 	    if (log.isTraceEnabled())
@@ -169,7 +178,7 @@
         uiPresentation.getChild(UIPresentation.class).setTemplatePath(templateService.getTemplatePath(nodeView, false));
       }
     }
-
+    
     if (uiPresentation!=null && uiPresentation.isContextual() && nodeView!=null) {
       RenderResponse response = context.getResponse();
       Element title = response.createElement("title");
Index: apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/scv/UIPresentation.java
===================================================================
--- apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/scv/UIPresentation.java	(revision 72463)
+++ apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/scv/UIPresentation.java	(working copy)
@@ -41,6 +41,7 @@
 import org.exoplatform.services.wcm.friendly.FriendlyService;
 import org.exoplatform.services.wcm.publication.WCMComposer;
 import org.exoplatform.wcm.webui.Utils;
+import org.exoplatform.wcm.webui.clv.UICLVPortlet;
 import org.exoplatform.web.application.Parameter;
 import org.exoplatform.webui.application.WebuiRequestContext;
 import org.exoplatform.webui.application.portlet.PortletRequestContext;
@@ -86,7 +87,15 @@
    * @see org.exoplatform.ecm.webui.presentation.UIBaseNodePresentation#getNode()
    */
   public Node getNode() throws Exception {
-  	return Utils.getViewableNodeByComposer(viewNodeLocation.getRepository(), viewNodeLocation.getWorkspace(), viewNodeLocation.getPath());
+    PortletRequestContext portletRequestContext = WebuiRequestContext.getCurrentInstance();
+    PortletPreferences preferences = portletRequestContext.getRequest().getPreferences();
+    String sharedCache = preferences.getValue(UISingleContentViewerPortlet.ENABLE_CACHE, "true");
+    sharedCache = "true".equals(sharedCache) ? WCMComposer.VISIBILITY_PUBLIC:WCMComposer.VISIBILITY_USER;
+  	return Utils.getViewableNodeByComposer(viewNodeLocation.getRepository(), 
+  	                                       viewNodeLocation.getWorkspace(), 
+                                           viewNodeLocation.getPath(),
+                                           null,
+                                           sharedCache);
   }
   
   /* (non-Javadoc)
Index: apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/scv/UISCVPreferences.java
===================================================================
--- apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/scv/UISCVPreferences.java	(revision 72463)
+++ apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/scv/UISCVPreferences.java	(working copy)
@@ -68,6 +68,8 @@
   
   public static final String PARAMETER_INPUT_BOX          = "UISCVParameterInputBox";
   
+  public static final String CACHE_ENABLE_SELECT_RADIO_BOX = "UISCVCacheRadioBox";
+  
   public final static String PRINT_PAGE_FORM_INPUT_SET    = "UISCVConfigPrintPageFormInputSet";
   public static final String PRINT_VIEW_PAGE_INPUT        = "UISCVPrintViewPageInput";
   /** The Constant PRINT_PAGE_SELECTOR_POPUP. */
@@ -92,7 +94,8 @@
   private UIFormCheckBoxInput<Boolean>  chkShowTitle;
   private UIFormCheckBoxInput<Boolean>  chkShowDate;
   private UIFormCheckBoxInput<Boolean>  chkShowOptionBar;
-  private UIFormRadioBoxInput           contextOptionsRadioInputBox; 
+  private UIFormRadioBoxInput           contextOptionsRadioInputBox;
+  private UIFormRadioBoxInput           cacheOptionsRadioInputBox;
   
   public UISCVPreferences() throws Exception{    
     portletPreferences = ((PortletRequestContext) WebuiRequestContext.getCurrentInstance()).getRequest().getPreferences();
@@ -143,6 +146,19 @@
     String strParameterName = portletPreferences.getValue(UISingleContentViewerPortlet.PARAMETER, null);
     UIFormStringInput txtParameterName = new UIFormStringInput(PARAMETER_INPUT_BOX, strParameterName);    
     
+    /** CACHE MANAGEMENT */
+    boolean isCacheEnabled = Boolean.parseBoolean(portletPreferences.getValue(UISingleContentViewerPortlet.ENABLE_CACHE, 
+                                                                                    "false"));
+    
+    List<SelectItemOption<String>> cacheOptions = new ArrayList<SelectItemOption<String>>();
+    cacheOptions.add(new SelectItemOption<String>(ENABLE_STRING, ENABLE_STRING));
+    cacheOptions.add(new SelectItemOption<String>(DISABLE_STRING, DISABLE_STRING));
+    cacheOptionsRadioInputBox = new UIFormRadioBoxInput(CACHE_ENABLE_SELECT_RADIO_BOX, 
+                                                        CACHE_ENABLE_SELECT_RADIO_BOX, 
+                                                        cacheOptions);
+    cacheOptionsRadioInputBox.setValue(isCacheEnabled ? ENABLE_STRING : DISABLE_STRING);
+    
+    /** PRINT PAGE */
     String strPrintParameterName = portletPreferences.getValue(UISingleContentViewerPortlet.PRINT_PARAMETER, null);
     txtPrintPageParameter = new UIFormStringInput(PRINT_PAGE_PARAMETER_INPUT, strPrintParameterName);
     
@@ -164,7 +180,7 @@
     addChild(txtParameterName);
     addChild(targetPageInputSet);
     addChild(txtPrintPageParameter);
-    
+    addChild(cacheOptionsRadioInputBox);
   }
   
   /**
@@ -185,6 +201,8 @@
       String strParameterName = uiSCVPref.getUIStringInput(PARAMETER_INPUT_BOX).getValue();
       String strPrintPageName = uiSCVPref.getUIStringInput(PRINT_VIEW_PAGE_INPUT).getValue();
       String strPrintParameterName  = uiSCVPref.getUIStringInput(PRINT_PAGE_PARAMETER_INPUT).getValue();
+      String strIsCacheEnabled = ((UIFormRadioBoxInput) uiSCVPref.getChildById(CACHE_ENABLE_SELECT_RADIO_BOX)).getValue();
+      strIsCacheEnabled = ENABLE_STRING.equals(strIsCacheEnabled) ? "true" : "false";
       
       portletPreferences.setValue(UISingleContentViewerPortlet.REPOSITORY, uiSCVPref.getSelectedNodeRepository());    
       portletPreferences.setValue(UISingleContentViewerPortlet.WORKSPACE, uiSCVPref.getSelectedNodeWorkspace());
@@ -198,6 +216,7 @@
       portletPreferences.setValue(UISingleContentViewerPortlet.PARAMETER, strParameterName);
       portletPreferences.setValue(UISingleContentViewerPortlet.PRINT_PAGE, strPrintPageName);
       portletPreferences.setValue(UISingleContentViewerPortlet.PRINT_PARAMETER, strPrintParameterName);
+      portletPreferences.setValue(UISingleContentViewerPortlet.ENABLE_CACHE, strIsCacheEnabled);
       portletPreferences.store();
       if (uiSCVPref.getInternalPreferencesMode()) {
         if (!Utils.isPortalEditMode()) {
Index: apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/scv/UIPresentationContainer.java
===================================================================
--- apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/scv/UIPresentationContainer.java	(revision 72463)
+++ apps/portlet-presentation/src/main/java/org/exoplatform/wcm/webui/scv/UIPresentationContainer.java	(working copy)
@@ -33,6 +33,7 @@
 import org.exoplatform.portal.webui.util.Util;
 import org.exoplatform.services.cms.templates.TemplateService;
 import org.exoplatform.services.jcr.core.ManageableRepository;
+import org.exoplatform.services.wcm.publication.WCMComposer;
 import org.exoplatform.wcm.webui.Utils;
 import org.exoplatform.webui.application.WebuiRequestContext;
 import org.exoplatform.webui.application.portlet.PortletRequestContext;
@@ -196,7 +197,9 @@
 		String repository = portletPreferences.getValue(UISingleContentViewerPortlet.REPOSITORY, null);    
 		String workspace = portletPreferences.getValue(UISingleContentViewerPortlet.WORKSPACE, null);
 		String nodeIdentifier = portletPreferences.getValue(UISingleContentViewerPortlet.IDENTIFIER, null);
-		viewNode = Utils.getRealNode(repository, workspace, nodeIdentifier, false);
+		String sharedCache = portletPreferences.getValue(UISingleContentViewerPortlet.ENABLE_CACHE, "true");
+    sharedCache = "true".equals(sharedCache) ? WCMComposer.VISIBILITY_PUBLIC:WCMComposer.VISIBILITY_USER;    
+    viewNode = Utils.getRealNode(repository, workspace, nodeIdentifier, false, sharedCache);
 		if (viewNode!=null) {
 	      boolean isDocumentType = false;
 	      if (viewNode.isNodeType("nt:frozenNode")) isDocumentType = true; 
@@ -232,7 +235,11 @@
    * @throws Exception the exception
    */
   public Node getParameterizedNode() throws Exception {
-
+    PortletRequestContext portletRequestContext = WebuiRequestContext.getCurrentInstance();
+    PortletPreferences preferences = portletRequestContext.getRequest().getPreferences();
+    String sharedCache = preferences.getValue(UISingleContentViewerPortlet.ENABLE_CACHE, "false");
+    sharedCache = "true".equals(sharedCache) ? WCMComposer.VISIBILITY_PUBLIC:WCMComposer.VISIBILITY_USER;
+    
     PortalRequestContext preq = Util.getPortalRequestContext();
     if (!preq.useAjax()) {
       contentParameter = getRequestParameters();
@@ -241,7 +248,7 @@
     if (contentParameter == null) return null;
     String strRepository = contentParameter.substring(0, contentParameter.indexOf("/"));
     UIPresentation presentation = getChild(UIPresentation.class);
-    Node nodeView = Utils.getViewableNodeByComposer(null, null, contentParameter);
+    Node nodeView = Utils.getViewableNodeByComposer(null, null, contentParameter, null, sharedCache);
     if (nodeView!=null) {
       boolean isDocumentType = false;
       if (nodeView.isNodeType("nt:frozenNode")) isDocumentType = true; 
Index: apps/portlet-presentation/src/main/webapp/groovy/ContentListViewer/UICLVConfig.gtmpl
===================================================================
--- apps/portlet-presentation/src/main/webapp/groovy/ContentListViewer/UICLVConfig.gtmpl	(revision 72463)
+++ apps/portlet-presentation/src/main/webapp/groovy/ContentListViewer/UICLVConfig.gtmpl	(working copy)
@@ -265,11 +265,9 @@
       	%>
         <fieldset style="display: $advancedBlockDisplay; margin-bottom: 10px; overflow: hidden; border: 1px solid #b7b7b7;" maxHeight="350">
           <legend class="StyleLegend"><a style="text-align:center; color: #0000FF; text-decoration:underline;" href="<%=uicomponent.event("ShowAdvancedBlock", "false")%>" title="<%=_ctx.appRes("UICLVConfig.label.AdvancedBlock")%>"><%=_ctx.appRes("UICLVConfig.label.AdvancedBlock")%></a></legend>
+          <div class="FieldLabel"><%=uicomponent.getLabel(uicomponent.DYNAMIC_NAVIGATION_LABEL) %></div>
           <table class="UIFormGrid" style="width:100%;">
           	<tr>
-          		<td class="FieldLabel"><%=uicomponent.getLabel(uicomponent.DYNAMIC_NAVIGATION_LABEL) %></td>
-          	</tr>
-          	<tr>
           		<td class="FieldLabel"><%=uicomponent.getLabel(uicomponent.CONTEXTUAL_FOLDER_RADIOBOX_INPUT) %></td>
           		<td class="FieldComponent ContextualRadio" colspan="2">
           			<% uiform.renderField(uicomponent.CONTEXTUAL_FOLDER_RADIOBOX_INPUT) %>
@@ -405,6 +403,15 @@
             </td>
             </tr>
           </table>
+          <div class="FieldLabel"><%=uicomponent.getLabel(uicomponent.CACHE_MANAGEMENT_LABEL)%></div>
+          <table class="UIFormGrid" style="width:100%;">
+            <tr>
+              <td class="FieldLabel"><%=uicomponent.getLabel(uicomponent.CACHE_ENABLE_RADIOBOX_INPUT) %></td>
+              <td class="FieldComponent ContextualRadio" colspan="2">
+                <% uiform.renderField(uicomponent.CACHE_ENABLE_RADIOBOX_INPUT) %>
+              </td>
+            </tr>
+          </table>
         </fieldset>
       	<a style="display: $advancedLinkDisplay; text-align:left; color: #0000FF; text-decoration:underline;" href="<%=uicomponent.event("ShowAdvancedBlock", "true")%>" title="<%=_ctx.appRes("UICLVConfig.label.AdvancedBlock")%>">
       		<%=_ctx.appRes("UICLVConfig.label.AdvancedBlock")%>
Index: apps/portlet-presentation/src/main/webapp/groovy/SingleContentViewer/UISCVPreferences.gtmpl
===================================================================
--- apps/portlet-presentation/src/main/webapp/groovy/SingleContentViewer/UISCVPreferences.gtmpl	(revision 72463)
+++ apps/portlet-presentation/src/main/webapp/groovy/SingleContentViewer/UISCVPreferences.gtmpl	(working copy)
@@ -196,6 +196,15 @@
                 </td>
                 </tr>                
               </table>
+              <div><%=_ctx.appRes("UISCVPreferences.label.CacheManagement") %></div>
+              <table class="UIFormGrid" width="100%">
+                <tr>
+                  <td class="FieldComponent" style="text-align:right;vertical-align:middle;"><%=uicomponent.getLabel(uicomponent.CACHE_ENABLE_SELECT_RADIO_BOX) %></td>
+                  <td class="FieldLabel" style="text-align:left;vertical-align:middle;" colspan="2">
+                    <%uiform.renderField(uicomponent.CACHE_ENABLE_SELECT_RADIO_BOX) %>                      
+                  </td>
+                </tr>
+              </table>
             </fieldset>  
           </div>
           <script type="text/javascript">
@@ -232,5 +241,4 @@
       <%
     uiform.end()
   %>
-</div>
-            
\ No newline at end of file
+</div>
\ No newline at end of file
Index: apps/portlet-presentation/src/main/webapp/WEB-INF/portlet.xml
===================================================================
--- apps/portlet-presentation/src/main/webapp/WEB-INF/portlet.xml	(revision 72463)
+++ apps/portlet-presentation/src/main/webapp/WEB-INF/portlet.xml	(working copy)
@@ -108,16 +108,21 @@
 				<value>printviewer</value>
 				<read-only>false</read-only>
 			</preference>
-      <preference>
-        <name>basePath</name>
-        <value>detail</value>
-        <read-only>false</read-only>
-      </preference>
-      <preference>
-        <name>showScvWith</name>
-        <value>content-id</value>
-        <read-only>false</read-only>
-      </preference> 			
+	      <preference>
+	        <name>basePath</name>
+	        <value>detail</value>
+	        <read-only>false</read-only>
+	      </preference>
+	      <preference>
+	        <name>showScvWith</name>
+	        <value>content-id</value>
+	        <read-only>false</read-only>
+	      </preference>
+	      <preference>
+	        <name>sharedCache</name>
+	        <value>true</value>
+	        <read-only>false</read-only>
+	      </preference>
 		</portlet-preferences>
 		<security-role-ref>
 			<role-name>admin</role-name>
@@ -299,6 +304,11 @@
         <value>ContentList</value>
         <read-only>true</read-only>
       </preference>
+      <preference>
+        <name>sharedCache</name>
+        <value>true</value>
+        <read-only>false</read-only>
+      </preference>
 		</portlet-preferences>
 		<security-role-ref>
 			<role-name>admin</role-name>
@@ -404,6 +414,11 @@
         <value>content-id</value>
         <read-only>false</read-only>
       </preference>
+      <preference>
+        <name>sharedCache</name>
+        <value>true</value>
+        <read-only>false</read-only>
+      </preference>
     </portlet-preferences>
 	</portlet>
 	
@@ -577,6 +592,11 @@
       <value>CategoryNavigation</value>
       <read-only>true</read-only>
     </preference>
+      <preference>
+        <name>sharedCache</name>
+        <value>true</value>
+        <read-only>false</read-only>
+      </preference>
 	</portlet-preferences>
 	</portlet>
 	
@@ -717,6 +737,11 @@
         <value>CategoryContents</value>
         <read-only>true</read-only>
       </preference>
+      <preference>
+        <name>sharedCache</name>
+        <value>true</value>
+        <read-only>false</read-only>
+      </preference>
 		</portlet-preferences>
 	</portlet>
 
@@ -749,8 +774,8 @@
      <filter-name>PortletFilterCache</filter-name>
      <filter-class>org.exoplatform.services.portletcache.PortletCacheFilter</filter-class>
      <lifecycle>RENDER_PHASE</lifecycle>
-   </filter> 
-
+   </filter>
+   
    <filter-mapping>
      <filter-name>PortletFilterCache</filter-name>
      <portlet-name>SingleContentViewer</portlet-name>
@@ -765,5 +790,5 @@
      <filter-name>PortletFilterCache</filter-name>
      <portlet-name>ContentListViewerPortlet</portlet-name>
    </filter-mapping>
-	
+   
 </portlet-app>
Index: apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/ContentListViewer/ContentListViewer_vi.xml
===================================================================
--- apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/ContentListViewer/ContentListViewer_vi.xml	(revision 72463)
+++ apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/ContentListViewer/ContentListViewer_vi.xml	(working copy)
@@ -142,6 +142,8 @@
 	  <UICLVConfigshowSCVWithStringInput>với</UICLVConfigshowSCVWithStringInput>
       <UICLVConfigTargetPageFormInputSet>Hiển thị tại trang</UICLVConfigTargetPageFormInputSet>
       <content-not-found>Không tìm thấy nội dung!</content-not-found>
+      <UICLVConfigCacheManagementLabel>Quản lý Cache</UICLVConfigCacheManagementLabel>
+      <UICLVConfigCacheEnableRadioBoxInput>Chia sẻ nội dung giữa người sử dụng</UICLVConfigCacheEnableRadioBoxInput>
     </label>
     <help>
     	<ModeSelectionHelp>Determine what kind of information will be display inside portlet</ModeSelectionHelp>
@@ -163,9 +165,15 @@
   
   <UICLVConfigContextualFolderRadioBoxInput>
   	<label>
-		  <contextualEnable>Bật</contextualEnable>
-		  <contextualDisable>Tắt</contextualDisable>
+	  <contextualEnable>Bật</contextualEnable>
+	  <contextualDisable>Tắt</contextualDisable>
   	</label>
   </UICLVConfigContextualFolderRadioBoxInput>
-
+  
+  <UICLVConfigCacheEnableRadioBoxInput>
+  	<label>
+	  <ENABLE>Bật</ENABLE>
+	  <DISABLE>Tắt</DISABLE>
+  	</label>
+  </UICLVConfigCacheEnableRadioBoxInput>
 </bundle>
\ No newline at end of file
Index: apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/ContentListViewer/ContentListViewer_ar.xml
===================================================================
--- apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/ContentListViewer/ContentListViewer_ar.xml	(revision 72463)
+++ apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/ContentListViewer/ContentListViewer_ar.xml	(working copy)
@@ -46,6 +46,8 @@
       <UICLVConfigShowDateCreatedFormCheckboxInput>إظهار تاريخ</UICLVConfigShowDateCreatedFormCheckboxInput>
       <UICLVConfigShowLinkFormCheckboxInput>إظهار رابط </UICLVConfigShowLinkFormCheckboxInput>
       <UICLVConfigShowReadmoreFormCheckboxInput>قرأ</UICLVConfigShowReadmoreFormCheckboxInput>
+      <UICLVConfigCacheManagementLabel>Cache Management</UICLVConfigCacheManagementLabel>
+	  <UICLVConfigCacheEnableRadioBoxInput>Share contents between users</UICLVConfigCacheEnableRadioBoxInput>
     </label>
     <action>
       <Save>حفظ</Save>
@@ -119,5 +121,11 @@
       <UIContentDialogForm>شكل محتوى ويب</UIContentDialogForm>
     </title>
   </UIContentDialogFormPopupWindow>
-
+  
+  <UICLVConfigCacheEnableRadioBoxInput>
+  	<label>
+	  <ENABLE>Enabled</ENABLE>
+	  <DISABLE>Disabled</DISABLE>
+  	</label>
+  </UICLVConfigCacheEnableRadioBoxInput>
 </bundle>
\ No newline at end of file
Index: apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/ContentListViewer/ContentListViewer_en.xml
===================================================================
--- apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/ContentListViewer/ContentListViewer_en.xml	(revision 72463)
+++ apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/ContentListViewer/ContentListViewer_en.xml	(working copy)
@@ -57,7 +57,9 @@
 	  <UICLVConfigShowCLVByStringInput>by</UICLVConfigShowCLVByStringInput>
 	  <UICLVConfigshowSCVWithStringInput>with</UICLVConfigshowSCVWithStringInput>
       <UICLVConfigTargetPageFormInputSet>Show in page</UICLVConfigTargetPageFormInputSet>
-      <content-not-found>Content not found!</content-not-found>	  
+      <content-not-found>Content not found!</content-not-found>
+      <UICLVConfigCacheManagementLabel>Cache Management</UICLVConfigCacheManagementLabel>
+	  <UICLVConfigCacheEnableRadioBoxInput>Share contents between users</UICLVConfigCacheEnableRadioBoxInput>	  
     </label>
     <help>
     	<ModeSelectionHelp>Two modes are available to show contents. "By folder" will take all the contents available in the folder/category you choose ; "By Contents" lets you manually choose the contents you want to show</ModeSelectionHelp>
@@ -165,4 +167,10 @@
     <published>Published</published>
   </PublicationStates>  
   
+  <UICLVConfigCacheEnableRadioBoxInput>
+  	<label>
+	  <ENABLE>Enabled</ENABLE>
+	  <DISABLE>Disabled</DISABLE>
+  	</label>
+  </UICLVConfigCacheEnableRadioBoxInput>  
 </bundle>
\ No newline at end of file
Index: apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/ContentListViewer/ContentListViewer_fr.xml
===================================================================
--- apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/ContentListViewer/ContentListViewer_fr.xml	(revision 72463)
+++ apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/ContentListViewer/ContentListViewer_fr.xml	(working copy)
@@ -129,8 +129,10 @@
 	  <UICLVConfigContextualFolderRadioBoxInput>Répertoire contextuel</UICLVConfigContextualFolderRadioBoxInput> 	
 	  <UICLVConfigShowCLVByStringInput>par</UICLVConfigShowCLVByStringInput>
 	  <UICLVConfigshowSCVWithStringInput>avec</UICLVConfigshowSCVWithStringInput>
-    <UICLVConfigTargetPageFormInputSet>Afficher dans la page</UICLVConfigTargetPageFormInputSet>
-    <content-not-found>Le contenu n'a pas été trouvé</content-not-found>
+   	  <UICLVConfigTargetPageFormInputSet>Afficher dans la page</UICLVConfigTargetPageFormInputSet>
+      <content-not-found>Le contenu n'a pas été trouvé</content-not-found>
+      <UICLVConfigCacheManagementLabel>Gestion de cache</UICLVConfigCacheManagementLabel>
+      <UICLVConfigCacheEnableRadioBoxInput>Contenus partagés entre utilisateurs</UICLVConfigCacheEnableRadioBoxInput>
     </label>
     <help>
       <ModeSelectionHelp>Deux modes sont disponibles pour affichers les contenus. "Par répertoire" affichage tous les contenus présents dans le répertoire (ou catégorie) sélectionné ; "Par contenus" vous permet de choisir manuellement les contenus à afficher.</ModeSelectionHelp>
@@ -169,5 +171,11 @@
     <staged>Prêt à publier</staged>
     <published>Publié</published>
   </PublicationStates>
-
+  
+  <UICLVConfigCacheEnableRadioBoxInput>
+  	<label>
+	  <ENABLE>Activé</ENABLE>
+	  <DISABLE>Désactivé</DISABLE>
+  	</label>
+  </UICLVConfigCacheEnableRadioBoxInput>
 </bundle>
\ No newline at end of file
Index: apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/SingleContentViewer/SingleContentViewer_ar.xml
===================================================================
--- apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/SingleContentViewer/SingleContentViewer_ar.xml	(revision 72463)
+++ apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/SingleContentViewer/SingleContentViewer_ar.xml	(working copy)
@@ -84,4 +84,19 @@
    	</title>
   </CorrectContentSelectorPopupWindow>
   
+  <UISCVPreferences>
+    <label>
+	  <LockStatus>Lock</LockStatus>
+	  <CacheManagement>Cache Management</CacheManagement>
+	  <UISCVCacheRadioBox>Share contents between users</UISCVCacheRadioBox>
+    </label>
+  </UISCVPreferences>    
+    
+  
+  <UISCVCacheRadioBox>
+  	<label>
+	  <Enable>Enabled</Enable>
+	  <Disable>Disabled</Disable>
+  	</label>
+  </UISCVCacheRadioBox>  
 </bundle>
\ No newline at end of file
Index: apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/SingleContentViewer/SingleContentViewer_en.xml
===================================================================
--- apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/SingleContentViewer/SingleContentViewer_en.xml	(revision 72463)
+++ apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/SingleContentViewer/SingleContentViewer_en.xml	(working copy)
@@ -64,7 +64,9 @@
    	  <PrintSettingBlock>Print settings</PrintSettingBlock>
    	  <UISCVPrintPageParameter>with</UISCVPrintPageParameter>
    	  <UISCVConfigPrintPageFormInputSet>Show in page</UISCVConfigPrintPageFormInputSet>
-						<LockStatus>Lock</LockStatus>						
+	  <LockStatus>Lock</LockStatus>
+	  <CacheManagement>Cache Management</CacheManagement>
+	  <UISCVCacheRadioBox>Share contents between users</UISCVCacheRadioBox>						
     </label>
     <help>
    	  <ContentPathBlock>Select the content you want to show. This default content will be replaced dynamically if you activate the Dynamic navigation (Advanced mode, see below).</ContentPathBlock>
@@ -96,5 +98,12 @@
     <staged>Staged</staged>
     <published>Published</published>
   </PublicationStates>
+  
+  <UISCVCacheRadioBox>
+  	<label>
+	  <Enable>Enabled</Enable>
+	  <Disable>Disabled</Disable>
+  	</label>
+  </UISCVCacheRadioBox>
     
 </bundle>
\ No newline at end of file
Index: apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/SingleContentViewer/SingleContentViewer_fr.xml
===================================================================
--- apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/SingleContentViewer/SingleContentViewer_fr.xml	(revision 72463)
+++ apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/SingleContentViewer/SingleContentViewer_fr.xml	(working copy)
@@ -62,7 +62,9 @@
    	  <PrintSettingBlock>Configuration d'impression</PrintSettingBlock>
    	  <UISCVPrintPageParameter>Avec</UISCVPrintPageParameter>
    	  <UISCVConfigPrintPageFormInputSet>Afficher dans la page</UISCVConfigPrintPageFormInputSet>
-						<LockStatus>Verrouillage</LockStatus>	
+	  <LockStatus>Verrouillage</LockStatus>
+	  <CacheManagement>Gestion de cache</CacheManagement>
+	  <UISCVCacheRadioBox>Contenus partagés entre utilisateurs</UISCVCacheRadioBox>
     </label>
     <help>
       <ContentPathBlock>Choisissez le contenu que vous souhaitez afficher. Ce contenu par défaut sera remplacé dynamiquement si vous activez la Navigation Dynamique (mode Avancé, voir ci-dessous)</ContentPathBlock>
@@ -90,4 +92,10 @@
     <published>Publié</published>
   </PublicationStates>
   
+  <UISCVCacheRadioBox>
+  	<label>
+	  <Enable>Activé</Enable>
+	  <Disable>Désactivé</Disable>
+  	</label>
+  </UISCVCacheRadioBox>
 </bundle>
\ No newline at end of file
Index: apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/SingleContentViewer/SingleContentViewer_vi.xml
===================================================================
--- apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/SingleContentViewer/SingleContentViewer_vi.xml	(revision 72463)
+++ apps/portlet-presentation/src/main/webapp/WEB-INF/classes/locale/portlet/SingleContentViewer/SingleContentViewer_vi.xml	(working copy)
@@ -62,7 +62,9 @@
    	  <PrintSettingBlock>Tùy chọn xem bản in</PrintSettingBlock>
    	  <UISCVPrintPageParameter>Tham số URL</UISCVPrintPageParameter>
    	  <UISCVConfigPrintPageFormInputSet>Xem bản in tại</UISCVConfigPrintPageFormInputSet>
-						<LockStatus>Khóa</LockStatus>	
+	  <LockStatus>Khóa</LockStatus>
+	  <CacheManagement>Quản lý cache</CacheManagement>
+	  <UISCVCacheRadioBox>Chia sẻ nội dung giữa người sử dụng</UISCVCacheRadioBox>
 	</label>
     <help>
    	  <ContentPathBlock>Vui lòng lựa chọn dữ liệu nguồn để hiển thị</ContentPathBlock>
@@ -81,4 +83,11 @@
   		<SelectTargetPage>Xem bản in tại</SelectTargetPage>
   	</title>  	
   </UISCVConfigPrintPageFormInputSet>
+  
+  <UISCVCacheRadioBox>
+  	<label>
+	  <Enable>Cho phép</Enable>
+	  <Disable>Vô hiệu</Disable>
+  	</label>
+  </UISCVCacheRadioBox>
 </bundle>
\ No newline at end of file
Index: packaging/wcm/webapp/src/main/webapp/WEB-INF/conf/wcm-extension/wcm/publication-configuration.xml
===================================================================
--- packaging/wcm/webapp/src/main/webapp/WEB-INF/conf/wcm-extension/wcm/publication-configuration.xml	(revision 72463)
+++ packaging/wcm/webapp/src/main/webapp/WEB-INF/conf/wcm-extension/wcm/publication-configuration.xml	(working copy)
@@ -51,12 +51,16 @@
     <init-params>
       <value-param>
         <name>useCache</name>
-        <value>true</value>
+        <value>false</value>
       </value-param>
       <value-param>
         <name>useDefaultLanguage</name>
         <value>true</value>
       </value-param>
+      <value-param>
+      	<name>sharedGroup</name>
+      	<value>*:/platform/users</value>
+      </value-param>
     </init-params>
   </component>
 
Index: packaging/wcm/webapp/src/main/webapp/WEB-INF/conf/configuration.xml
===================================================================
--- packaging/wcm/webapp/src/main/webapp/WEB-INF/conf/configuration.xml	(revision 72463)
+++ packaging/wcm/webapp/src/main/webapp/WEB-INF/conf/configuration.xml	(working copy)
@@ -49,6 +49,7 @@
   <import>war:/conf/dms-extension/dms/dms-thumbnail-configuration.xml</import>
   <import>war:/conf/dms-extension/dms/dms-common-configuration.xml</import>
   <import>war:/conf/dms-extension/dms/dms-document-type-configuration.xml</import>  
+  <import>war:/conf/dms-extension/dms/dms-session-providers-configuration.xml</import>
   
   <import>war:/conf/wcm-extension/kernel/schedule-configuration.xml</import>
   <import>war:/conf/wcm-extension/jcr/jcr-configuration.xml</import>
Index: packaging/wcm/webapp/src/main/webapp/WEB-INF/conf/dms-extension/dms/dms-session-providers-configuration.xml
===================================================================
--- packaging/wcm/webapp/src/main/webapp/WEB-INF/conf/dms-extension/dms/dms-session-providers-configuration.xml	(revision 0)
+++ packaging/wcm/webapp/src/main/webapp/WEB-INF/conf/dms-extension/dms/dms-session-providers-configuration.xml	(revision 0)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+<configuration
+   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+   xsi:schemaLocation="http://www.exoplaform.org/xml/ns/kernel_1_1.xsd http://www.exoplaform.org/xml/ns/kernel_1_1.xsd"
+   xmlns="http://www.exoplaform.org/xml/ns/kernel_1_1.xsd">
+
+  <component>
+    <key>org.exoplatform.services.jcr.sessions.ACLSessionProviderService</key>
+    <type>org.exoplatform.services.jcr.sessions.impl.ACLSessionProviderServiceThreadLocalImpl</type>
+  </component>
+</configuration>
Index: packaging/wcm/webapp/src/main/webapp/WEB-INF/conf/dms-extension/dms/cms-configuration.xml
===================================================================
--- packaging/wcm/webapp/src/main/webapp/WEB-INF/conf/dms-extension/dms/cms-configuration.xml	(revision 72463)
+++ packaging/wcm/webapp/src/main/webapp/WEB-INF/conf/dms-extension/dms/cms-configuration.xml	(working copy)
@@ -4,8 +4,7 @@
    xsi:schemaLocation="http://www.exoplaform.org/xml/ns/kernel_1_1.xsd http://www.exoplaform.org/xml/ns/kernel_1_1.xsd"
    xmlns="http://www.exoplaform.org/xml/ns/kernel_1_1.xsd">
 
-
-	<component>
+  <component>
     <key>org.exoplatform.services.cms.CmsService</key>
     <type>org.exoplatform.services.cms.impl.CmsServiceImpl</type>
   </component>
Index: packaging/ecmdemo/webapp/src/main/webapp/WEB-INF/web.xml
===================================================================
--- packaging/ecmdemo/webapp/src/main/webapp/WEB-INF/web.xml	(revision 72463)
+++ packaging/ecmdemo/webapp/src/main/webapp/WEB-INF/web.xml	(working copy)
@@ -55,6 +55,11 @@
     <filter-name>ThreadLocalSessionProviderInitializedFilter</filter-name>
     <filter-class>org.exoplatform.frameworks.jcr.web.ThreadLocalSessionProviderInitializedFilter</filter-class>
   </filter>
+  
+  <filter>
+    <filter-name>ThreadLocalACLSessionProviderInitializedFilter</filter-name>
+    <filter-class>org.exoplatform.services.filters.sessionProvider.ThreadLocalACLSessionProviderInitializedFilter</filter-class>
+  </filter>
 
   <filter>
     <filter-name>SetCurrentIdentityFilter</filter-name>
@@ -144,7 +149,10 @@
     <url-pattern>/rest-ecmdemo/private/*</url-pattern>
   </filter-mapping>   
 
-  
+  <filter-mapping>
+    <filter-name>ThreadLocalACLSessionProviderInitializedFilter</filter-name>
+    <url-pattern>/*</url-pattern>
+  </filter-mapping>   
 
   <!-- ================================================================== -->
   <!--           LISTENER                                                 -->
Index: core/services/src/main/java/org/exoplatform/services/cms/templates/impl/TemplateServiceImpl.java
===================================================================
--- core/services/src/main/java/org/exoplatform/services/cms/templates/impl/TemplateServiceImpl.java	(revision 72463)
+++ core/services/src/main/java/org/exoplatform/services/cms/templates/impl/TemplateServiceImpl.java	(working copy)
@@ -45,6 +45,7 @@
 import org.exoplatform.services.cms.templates.TemplateService;
 import org.exoplatform.services.cms.templates.ContentTypeFilterPlugin.FolderFilterConfig;
 import org.exoplatform.services.jcr.RepositoryService;
+import org.exoplatform.services.jcr.access.DynamicIdentity;
 import org.exoplatform.services.jcr.access.SystemIdentity;
 import org.exoplatform.services.jcr.config.RepositoryEntry;
 import org.exoplatform.services.jcr.core.ManageableRepository;
@@ -326,7 +327,7 @@
    */
   public String getTemplatePathByUser(boolean isDialog, String nodeTypeName, String userName,
       String repository) throws Exception {
-    if(SystemIdentity.ANONIM.equals(userName) || userName == null) {
+    if(SystemIdentity.ANONIM.equals(userName) || DynamicIdentity.DYNAMIC.equals(userName) || userName == null) {
       return getTemplatePathByAnonymous(isDialog, nodeTypeName, repository);
     }
     Session session = getSession(repository);
Index: core/services/src/main/java/org/exoplatform/services/filters/sessionProvider/ThreadLocalACLSessionProviderInitializedFilter.java
===================================================================
--- core/services/src/main/java/org/exoplatform/services/filters/sessionProvider/ThreadLocalACLSessionProviderInitializedFilter.java	(revision 0)
+++ core/services/src/main/java/org/exoplatform/services/filters/sessionProvider/ThreadLocalACLSessionProviderInitializedFilter.java	(revision 0)
@@ -0,0 +1,57 @@
+/*
+ * Copyright (C) 2003-2011 eXo Platform SAS.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Affero General Public License
+ * as published by the Free Software Foundation; either version 3
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, see<http://www.gnu.org/licenses/>.
+ */
+package org.exoplatform.services.filters.sessionProvider;
+
+import java.io.IOException;
+
+import javax.servlet.FilterChain;
+import javax.servlet.ServletException;
+import javax.servlet.ServletRequest;
+import javax.servlet.ServletResponse;
+
+import org.exoplatform.container.web.AbstractFilter;
+import org.exoplatform.services.jcr.sessions.ACLSessionProviderService;
+import org.exoplatform.services.wcm.utils.WCMCoreUtils;
+
+/**
+ * Created by The eXo Platform SAS
+ * Author : Nguyen Anh Vu
+ *          anhvurz90@gmail.com
+ * May 9, 2011  
+ */
+public class ThreadLocalACLSessionProviderInitializedFilter extends AbstractFilter {
+
+  private ACLSessionProviderService aclService;
+  @Override
+  public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException,
+                                                                                           ServletException {
+    aclService = WCMCoreUtils.getService(ACLSessionProviderService.class);
+    try {
+      chain.doFilter(request, response);
+    } finally {
+      aclService.clearSessionProviders();
+    }
+  }
+
+  /*
+   * (non-Javadoc)
+   * @see javax.servlet.Filter#destroy()
+   */
+  public void destroy() {
+  }
+  
+}
Index: core/services/src/main/java/org/exoplatform/services/portletcache/PortletCacheFilter.java
===================================================================
--- core/services/src/main/java/org/exoplatform/services/portletcache/PortletCacheFilter.java	(revision 72463)
+++ core/services/src/main/java/org/exoplatform/services/portletcache/PortletCacheFilter.java	(working copy)
@@ -19,10 +19,10 @@
 
 package org.exoplatform.services.portletcache;
 
-import org.exoplatform.container.PortalContainer;
-import org.exoplatform.portal.application.PortalRequestContext;
-import org.exoplatform.services.log.ExoLogger;
-import org.exoplatform.services.log.Log;
+import java.io.IOException;
+import java.io.OutputStream;
+import java.util.Locale;
+import java.util.Map;
 
 import javax.portlet.ActionRequest;
 import javax.portlet.ActionResponse;
@@ -37,13 +37,11 @@
 import javax.portlet.filter.FilterConfig;
 import javax.portlet.filter.PortletFilter;
 import javax.portlet.filter.RenderFilter;
-import java.io.IOException;
-import java.io.OutputStream;
-import java.lang.reflect.Field;
-import java.util.Collections;
-import java.util.Locale;
-import java.util.Map;
 
+import org.exoplatform.container.PortalContainer;
+import org.exoplatform.portal.application.PortalRequestContext;
+import org.exoplatform.portal.webui.util.Util;
+
 /**
  * @author <a href="mailto:julien.viet@exoplatform.com">Julien Viet</a>
  * @version $Revision$
@@ -51,6 +49,13 @@
 public class PortletCacheFilter implements PortletFilter, ActionFilter, RenderFilter, EventFilter
 {
 
+  private static final String EXO_CACHE = "exo.cache";
+  private static final String TRUE = "true";
+  private static final String FALSE = "false";
+  private static final String SHARED_CACHE = "sharedCache";
+  private static final String TURN_ON_QUICK_EDIT = "turnOnQuickEdit";
+  private static final String NO_CACHE = "nocache";
+  
    public PortletCacheFilter()
    {
    }
@@ -75,14 +80,15 @@
 
    public void doFilter(RenderRequest req, RenderResponse resp, FilterChain chain) throws IOException, PortletException
    {
-      if (req.getRemoteUser() == null)
-      {
-         PortalRequestContext ctx = (PortalRequestContext)PortalRequestContext.getCurrentInstance();
+        String exoCacheUsageRequestParam = Util.getPortalRequestContext().getRequestParameter(EXO_CACHE);
+        PortalRequestContext ctx = (PortalRequestContext)PortalRequestContext.getCurrentInstance();
+        Boolean quickEdit = (Boolean) ctx.getRequest().getSession().getAttribute(TURN_ON_QUICK_EDIT);
+        if (quickEdit==null) quickEdit=false;
+        Boolean sharedCache = TRUE.equals(req.getPreferences().getValue(SHARED_CACHE, FALSE));
+        if (!NO_CACHE.equals(exoCacheUsageRequestParam) && (req.getRemoteUser() == null || (!quickEdit && sharedCache))) {     
          Map<String, String[]> query = (Map<String, String[]>)ctx.getRequest().getParameterMap();
-
          //
          Locale locale = ctx.getLocale();
-
          //
          WindowKey key = new WindowKey(
             req.getWindowID(),
Index: core/services/src/main/java/org/exoplatform/services/jcr/sessions/ACLSessionProviderService.java
===================================================================
--- core/services/src/main/java/org/exoplatform/services/jcr/sessions/ACLSessionProviderService.java	(revision 0)
+++ core/services/src/main/java/org/exoplatform/services/jcr/sessions/ACLSessionProviderService.java	(revision 0)
@@ -0,0 +1,43 @@
+/*
+ * Copyright (C) 2003-2011 eXo Platform SAS.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Affero General Public License
+ * as published by the Free Software Foundation; either version 3
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, see<http://www.gnu.org/licenses/>.
+ */
+package org.exoplatform.services.jcr.sessions;
+
+import java.util.List;
+
+import org.exoplatform.services.jcr.access.AccessControlEntry;
+import org.exoplatform.services.jcr.ext.common.SessionProvider;
+
+/**
+ * Created by The eXo Platform SAS
+ * Author : Nguyen Anh Vu
+ *          anhvurz90@gmail.com
+ * Apr 25, 2011  
+ */
+public interface ACLSessionProviderService {
+  
+  /**
+   * Gets the session provider by access control entry list
+   * @param accessEntry
+   * @return the SessionProvider
+   */
+  public SessionProvider getACLSessionProvider(List<AccessControlEntry> accessList);
+  
+  /**
+   * Clears all created session providers
+   */
+  public void clearSessionProviders();
+}
Index: core/services/src/main/java/org/exoplatform/services/jcr/sessions/impl/ACLSessionProviderServiceThreadLocalImpl.java
===================================================================
--- core/services/src/main/java/org/exoplatform/services/jcr/sessions/impl/ACLSessionProviderServiceThreadLocalImpl.java	(revision 0)
+++ core/services/src/main/java/org/exoplatform/services/jcr/sessions/impl/ACLSessionProviderServiceThreadLocalImpl.java	(revision 0)
@@ -0,0 +1,54 @@
+/*
+ * Copyright (C) 2003-2011 eXo Platform SAS.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Affero General Public License
+ * as published by the Free Software Foundation; either version 3
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, see<http://www.gnu.org/licenses/>.
+ */
+package org.exoplatform.services.jcr.sessions.impl;
+
+import java.util.List;
+
+import org.exoplatform.services.jcr.access.AccessControlEntry;
+import org.exoplatform.services.jcr.ext.common.SessionProvider;
+import org.exoplatform.services.jcr.sessions.ACLSessionProviderService;
+
+/**
+ * Created by The eXo Platform SAS
+ * Author : Nguyen Anh Vu
+ *          anhvurz90@gmail.com
+ * Apr 25, 2011  
+ */
+public class ACLSessionProviderServiceThreadLocalImpl implements ACLSessionProviderService {
+  
+  private static ThreadLocal<SessionProvider> aclSessionProviderKeepers = new ThreadLocal<SessionProvider>();
+
+  @Override
+  public SessionProvider getACLSessionProvider(List<AccessControlEntry> accessList) {
+    SessionProvider provider = aclSessionProviderKeepers.get();
+    if (provider == null) {
+      provider = SessionProvider.createProvider(accessList);
+      aclSessionProviderKeepers.set(provider);
+    }
+    return provider;
+  }
+
+  @Override
+  public void clearSessionProviders() {
+    SessionProvider provider = aclSessionProviderKeepers.get();
+    if (provider != null) {
+      provider.close();
+      aclSessionProviderKeepers.remove();
+    }
+  }
+  
+}
Index: core/publication/src/main/java/org/exoplatform/services/wcm/publication/WCMComposerImpl.java
===================================================================
--- core/publication/src/main/java/org/exoplatform/services/wcm/publication/WCMComposerImpl.java	(revision 72463)
+++ core/publication/src/main/java/org/exoplatform/services/wcm/publication/WCMComposerImpl.java	(working copy)
@@ -24,6 +24,7 @@
 import org.exoplatform.management.jmx.annotations.NameTemplate;
 import org.exoplatform.management.jmx.annotations.Property;
 import org.exoplatform.management.rest.annotations.RESTEndpoint;
+import org.exoplatform.portal.config.UserACL;
 import org.exoplatform.portal.webui.util.Util;
 import org.exoplatform.services.cache.CacheService;
 import org.exoplatform.services.cache.ExoCache;
@@ -35,8 +36,14 @@
 import org.exoplatform.services.ecm.publication.PublicationPlugin;
 import org.exoplatform.services.ecm.publication.PublicationService;
 import org.exoplatform.services.jcr.RepositoryService;
+import org.exoplatform.services.jcr.access.AccessControlEntry;
+import org.exoplatform.services.jcr.access.PermissionType;
+import org.exoplatform.services.jcr.core.ExtendedNode;
 import org.exoplatform.services.jcr.core.ManageableRepository;
 import org.exoplatform.services.jcr.ext.common.SessionProvider;
+import org.exoplatform.services.jcr.ext.hierarchy.impl.HierarchyConfig.Permission;
+import org.exoplatform.services.jcr.sessions.ACLSessionProviderService;
+import org.exoplatform.services.jcr.sessions.impl.ACLSessionProviderServiceThreadLocalImpl;
 import org.exoplatform.services.log.ExoLogger;
 import org.exoplatform.services.log.Log;
 import org.exoplatform.services.wcm.core.WCMService;
@@ -73,6 +80,8 @@
 	
 	private MultiLanguageService multiLanguageService;
 	
+	private ACLSessionProviderService aclSessionProviderService;
+	
 	/** The cache. */
 	private ExoCache<String, Object> cache;
 	
@@ -92,7 +101,8 @@
 	private List<String> usedLanguages;
 	/** PrimaryTypes properties accessed on Front side */ 
 	private List<String> usedPrimaryTypes;
-	
+  /** shared group membership */
+  private String sharedGroup;
 
 	/**
 	 * Instantiates a new WCM composer impl.
@@ -107,6 +117,10 @@
 	    ValueParam useDefaultLanguage = params.getValueParam("useDefaultLanguage");
 	    if (useDefaultLanguage != null)
 	      this.useDefaultLanguage = Boolean.parseBoolean(useDefaultLanguage.getValue());
+      ValueParam sharedGroupParam = params.getValueParam("sharedGroup");
+      if (sharedGroupParam != null) {
+        this.sharedGroup = sharedGroupParam.getValue();
+      }
 		}
 		
 		repositoryService = WCMCoreUtils.getService(RepositoryService.class);
@@ -116,6 +130,7 @@
 		wcmService = WCMCoreUtils.getService(WCMService.class);
 		multiLanguageService = WCMCoreUtils.getService(MultiLanguageService.class);
 		cache = WCMCoreUtils.getService(CacheService.class).getCacheInstance("wcm.composer");
+		aclSessionProviderService = WCMCoreUtils.getService(ACLSessionProviderService.class);
 //		cache.setLiveTime(60);
 		
 	  usedLanguages = new ArrayList<String>();
@@ -132,12 +147,13 @@
 	 */
 	public Node getContent(String repository, String workspace, String nodeIdentifier, HashMap<String, String> filters, SessionProvider sessionProvider) throws Exception {
 		String mode = filters.get(FILTER_MODE); 
-  		String version = filters.get(FILTER_VERSION);
-  		String language = filters.get(FILTER_LANGUAGE);
-  		String remoteUser = null;
-  		try {
-  			remoteUser = Util.getPortalRequestContext().getRemoteUser();
-  		} catch (Exception e) {}
+    String version = filters.get(FILTER_VERSION);
+    String language = filters.get(FILTER_LANGUAGE);
+    String visibility = filters.get(FILTER_VISIBILITY);
+    String remoteUser = null;
+    try {
+      remoteUser = Util.getPortalRequestContext().getRemoteUser();
+    } catch (Exception e) {}
 
 		if (repository==null && workspace==null) {
 		  String[] params = nodeIdentifier.split("/");
@@ -157,6 +173,9 @@
 		}
 		Node node = null;
 		try {
+      if (WCMComposer.VISIBILITY_PUBLIC.equals(visibility) && MODE_LIVE.equals(mode) && remoteUser != null) {
+        sessionProvider = aclSessionProviderService.getACLSessionProvider(getAnyUserACL());
+      }
 		  node = wcmService.getReferencedContent(sessionProvider, repository, workspace, nodeIdentifier);
 		} catch (RepositoryException e) {
 		  node = getNodeByCategory(nodeIdentifier);
@@ -181,6 +200,7 @@
 		String language = filters.get(FILTER_LANGUAGE);
 		String recursive = filters.get(FILTER_RECURSIVE);
 		String primaryType = filters.get(FILTER_PRIMARY_TYPE);
+		String visibility = filters.get(FILTER_VISIBILITY);    
 		String remoteUser = null;
 		try {
 			remoteUser = Util.getPortalRequestContext().getRemoteUser();
@@ -200,17 +220,22 @@
 			List<Node> cachedNodes = (List<Node>)cache.get(hash);
 			if (cachedNodes != null) return cachedNodes;
 		}
-		if (log.isDebugEnabled()) log.debug("##### "+path+":"+version+":"+remoteUser+":"+orderBy+":"+orderType);
-		NodeIterator nodeIterator = getViewableContents(repository, workspace, path, filters, sessionProvider);
 		List<Node> nodes = new ArrayList<Node>();
-		Node node = null, viewNode = null;
-		while (nodeIterator != null && nodeIterator.hasNext()) {
-			node = nodeIterator.nextNode();
-			viewNode = getViewableContent(node, filters);
-			if (viewNode != null) {
-				nodes.add(viewNode);
+    try {
+      if (WCMComposer.VISIBILITY_PUBLIC.equals(visibility) && MODE_LIVE.equals(mode) && remoteUser != null) {
+        sessionProvider = aclSessionProviderService.getACLSessionProvider(getAnyUserACL());
 			}
-		}
+      if (log.isDebugEnabled()) log.debug("##### "+path+":"+version+":"+remoteUser+":"+orderBy+":"+orderType);
+      NodeIterator nodeIterator = getViewableContents(repository, workspace, path, filters, sessionProvider);
+      Node node = null, viewNode = null;
+      while (nodeIterator.hasNext()) {
+        node = nodeIterator.nextNode();
+        viewNode = getViewableContent(node, filters);
+        if (viewNode != null) {
+          nodes.add(viewNode);
+        }
+      }
+    } catch (Exception e) {}
 		if (MODE_LIVE.equals(mode) && isCached) {
 			String hash = getHash(path, version, remoteUser, language, recursive, orderBy, orderType, primaryType);
 //			cache.remove(hash);
@@ -304,7 +329,6 @@
       if (lnode!=null) {
 
         viewNode = getPublishedContent(lnode, filters);
-
         if (viewNode!=null) {
           return viewNode;
         } else if (!useDefaultLanguage) {
@@ -697,4 +721,10 @@
   private void addUsedPrimaryTypes(String primaryType) {
   	if (!usedPrimaryTypes.contains(primaryType)) usedPrimaryTypes.add(primaryType);
   }
+  
+  private List<AccessControlEntry> getAnyUserACL() {
+    List<AccessControlEntry> ret = new ArrayList<AccessControlEntry>(); 
+    ret.add(new AccessControlEntry(sharedGroup, PermissionType.READ));
+    return ret;
+  }
 }
Index: core/publication/src/main/java/org/exoplatform/services/wcm/publication/WCMComposer.java
===================================================================
--- core/publication/src/main/java/org/exoplatform/services/wcm/publication/WCMComposer.java	(revision 72463)
+++ core/publication/src/main/java/org/exoplatform/services/wcm/publication/WCMComposer.java	(working copy)
@@ -70,6 +70,9 @@
 	/** Filter parameter to execute a specific query. ex: "SELECT * from nt:base"*/
 	public final static String FILTER_QUERY_FULL = "filter-query-full";
 	
+  /** Filter parameter to filter results by visibility. ex: public, user*/
+  public final static String FILTER_VISIBILITY = "filter-visibility";
+	
 	/** mode of portlet **/
 	public final static String PORTLET_MODE = "portlet-mode";
 	
@@ -84,6 +87,12 @@
 
 	/** The Constant for base version. */
 	public final static String BASE_VERSION = "base";
+
+  /** The Constant VISIBILITY PUBLIC. */
+  public final static String VISIBILITY_PUBLIC = "public";
+  
+  /** The Constant VISIBILITY USER. */
+  public final static String VISIBILITY_USER = "user";
 	
 	/**
 	 * returns content at the specified path based on filters.
Index: core/webui/src/main/java/org/exoplatform/wcm/webui/Utils.java
===================================================================
--- core/webui/src/main/java/org/exoplatform/wcm/webui/Utils.java	(revision 72463)
+++ core/webui/src/main/java/org/exoplatform/wcm/webui/Utils.java	(working copy)
@@ -206,17 +206,39 @@
 		return getViewableNodeByComposer(repository, workspace, nodeIdentifier, null);
 	} 
 
+  /**
+   * Gets the viewable node by WCMComposer (depends on site mode)
+   *
+   * @param repository the repository's name
+   * @param workspace the workspace's name
+   * @param nodeIdentifier the node's path or node's UUID
+   * @param version the base version (e.g. <code>WCMComposer.BASE_VERSION</code>
+   *          )
+   * @return the viewable node. Return <code>null</code> if
+   *         <code>nodeIdentifier</code> is invalid
+   * @see #getViewableNodeByComposer(String repository, String workspace, String
+   *      nodeIdentifier) getViewableNodeByComposer()
+   * @see WCMComposer
+   */
+  public static Node getViewableNodeByComposer(String repository,
+                                               String workspace,
+                                               String nodeIdentifier,
+                                               String version) {
+    return getViewableNodeByComposer(repository, workspace, nodeIdentifier, version, WCMComposer.VISIBILITY_USER);
+  }  
+	
 	/**
 	 * Gets the viewable node by WCMComposer (depends on site mode)
 	 * @param repository the repository's name 
 	 * @param workspace the workspace's name
 	 * @param nodeIdentifier the node's path or node's UUID
 	 * @param version the base version (e.g. <code>WCMComposer.BASE_VERSION</code>)
+   * @param cacheVisibility the visibility of cache
 	 * @return the viewable node. Return <code>null</code> if <code>nodeIdentifier</code> is invalid
 	 * @see #getViewableNodeByComposer(String repository, String workspace, String nodeIdentifier) getViewableNodeByComposer()
 	 * @see WCMComposer
 	 */
-	public static Node getViewableNodeByComposer(String repository, String workspace, String nodeIdentifier, String version) {
+	public static Node getViewableNodeByComposer(String repository, String workspace, String nodeIdentifier, String version, String cacheVisibility) {
 		try {
 			HashMap<String, String> filters = new HashMap<String, String>();
 			
@@ -232,6 +254,7 @@
 			PortletMode portletMode = portletRequestContext.getApplicationMode();
 			filters.put(WCMComposer.PORTLET_MODE, portletMode.toString());
 			if (version != null) filters.put(WCMComposer.FILTER_VERSION, version);
+			filters.put(WCMComposer.FILTER_VISIBILITY, cacheVisibility);
 			return WCMCoreUtils.getService(WCMComposer.class).getContent(repository, workspace, Text.escapeIllegalJcrChars(nodeIdentifier), filters, WCMCoreUtils.getUserSessionProvider());
 		} catch (Exception e) {
 			return null;
@@ -552,12 +575,33 @@
    * @throws RepositoryException
    */
   public static Node getRealNode(String strRepository, String strWorkspace, String strIdentifier, boolean isWCMBase) throws RepositoryException{
+    return getRealNode(strRepository, strWorkspace, strIdentifier, isWCMBase, WCMComposer.VISIBILITY_USER);
+  }
+  
+  /**
+   * GetRealNode
+   *
+   * @param strRepository
+   * @param strWorkspace
+   * @param strIdentifier
+   * @param cacheVisibility the visibility of cache
+   *  
+   * @return the required node/ the target of a symlink node / null if node was
+   *         in trash.
+   * @throws RepositoryException
+   */
+  public static Node getRealNode(String strRepository,
+                                 String strWorkspace,
+                                 String strIdentifier,
+                                 boolean isWCMBase,
+                                 String cacheVisibility) throws RepositoryException {    
     LinkManager linkManager = WCMCoreUtils.getService(LinkManager.class);
     Node selectedNode;
     if (isWCMBase) {
-      selectedNode = getViewableNodeByComposer(strRepository, strWorkspace, strIdentifier, WCMComposer.BASE_VERSION);
+      selectedNode = getViewableNodeByComposer(strRepository, strWorkspace, strIdentifier, 
+                                               WCMComposer.BASE_VERSION, cacheVisibility);
     }else { 
-      selectedNode = getViewableNodeByComposer(strRepository, strWorkspace, strIdentifier);
+      selectedNode = getViewableNodeByComposer(strRepository, strWorkspace, strIdentifier, null, cacheVisibility);
     }
     if (selectedNode != null){
       if (!org.exoplatform.ecm.webui.utils.Utils.isInTrash(selectedNode)) {
Index: docs/refguide/src/main/resources/wikbook/en/en-US/pages/preface/portlet_contentlist.wiki
===================================================================
--- docs/refguide/src/main/resources/wikbook/en/en-US/pages/preface/portlet_contentlist.wiki	(revision 72463)
+++ docs/refguide/src/main/resources/wikbook/en/en-US/pages/preface/portlet_contentlist.wiki	(working copy)
@@ -23,6 +23,7 @@
 | *contextualFolder* | {{String}} | {{contextualDisable}} | Enable/ disable the contextual mode of the portlet. If enabled, the portlet can take the folder path indicated in the URL to display contents. |
 | *showScvWith* | {{String}} | {{content-id}} | The name of the parameter shows the path of content in url to display when clicking the "Read more" button of this content. |
 | *showClvBy* | {{String}} | {{folder-id}} | The name of the parameter shows the path of the folder in url to display its contents. |
+| *sharedCache* | {{Boolean}} | {{true}} | Define if the portlet will cache the displayed contents. |
 
 h1. Sample Configuration {anchor:id=CONTref.Portlets.ContentList.SampleConfiguration}
 {code:language=xml|indent=2}
@@ -137,5 +138,10 @@
         <value>folder-id</value>
         <read-only>false</read-only>
       </preference>
+      <preference>
+	<name>sharedCache</name>
+	<value>true</value>
+	<read-only>false</read-only>
+      </preference>      
     </portlet-preferences>
 {code}
Index: docs/refguide/src/main/resources/wikbook/en/en-US/pages/preface/portlet_contentdetail.wiki
===================================================================
--- docs/refguide/src/main/resources/wikbook/en/en-US/pages/preface/portlet_contentdetail.wiki	(revision 72463)
+++ docs/refguide/src/main/resources/wikbook/en/en-US/pages/preface/portlet_contentdetail.wiki	(working copy)
@@ -11,6 +11,7 @@
 | *ParameterName* | {{String}} | {{content-id}} | Define which parameter will be used to get the content's path |
 | *ShowVote* | {{Boolean}} | {{false}} | Show the result of voting for the displayed content |
 | *ShowComments* | {{Boolean}} | {{false}} | Show the existing comments of this content (if any) |
+| *sharedCache* | {{Boolean}} | {{true}} | Define if the portlet will cache the displayed contents. |
 
 h1. Sample configuration {anchor:id=CONTref.Portlets.ContentDetail.SampleConfiguration}
 {code:language=xml|indent=2}
@@ -65,6 +66,11 @@
 				<value>content-id</value>
 				<read-only>false</read-only>
 			</preference>
+			<preference>
+				<name>sharedCache</name>
+				<value>true</value>
+				<read-only>false</read-only>
+			</preference>			
 		</portlet-preferences>
 {code}
 
